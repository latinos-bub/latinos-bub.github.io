<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>css基本样式</title>
      <link href="/2020/01/28/css-ji-ben-yang-shi/"/>
      <url>/2020/01/28/css-ji-ben-yang-shi/</url>
      
        <content type="html"><![CDATA[<h1 id="div中文字居中"><a href="#div中文字居中" class="headerlink" title="div中文字居中"></a><font color="#FF8C00">div中文字居中</font></h1><p>如何让一个div中的文字水平和垂直居中？设置如下：<br>给定该div的长宽（或者二者只给出其一也可）</p><pre class="line-numbers language-html"><code class="language-html">.box{    height: 100px;    width: 30%;    text-align: center; // 水平居中,如果不行，设置margin: auto; 也可    line-height: 100px; // 因为其内是文字，所以只需设置行高与高度一样即可}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="1.webp">]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx在centos7下的安装</title>
      <link href="/2020/01/09/nginx-zai-centos7-xia-de-an-zhuang/"/>
      <url>/2020/01/09/nginx-zai-centos7-xia-de-an-zhuang/</url>
      
        <content type="html"><![CDATA[<h1 id="nginx是什么"><a href="#nginx是什么" class="headerlink" title="nginx是什么"></a><font color="#FF8C00">nginx是什么</font></h1><p>Nginx 是一个高性能的 HTTP 和反向代理 web 服务器，同时也提供了 IMAP/POP3/SMTP 的服务<br>Nginx 特点是占有内存少，并发能力强<br>一般来说，如果我们在项目中引入了 Nginx ，我们的项目架构可能是这样：<br><img src="1.webp"><br>在这样的架构中 ， Nginx 所代表的角色叫做负载均衡服务器或者反向代理服务器，所有请求首先到达 Nginx 上，再由 Nginx 根据提前配置好的转发规则，将客户端发来的请求转发到某一个 Tomcat 上去<br>那么这里涉及到两个概念：</p><ul><li>负载均衡服务器<br>就是进行请求转发，降低某一个服务器的压力。负载均衡策略很多，也有很多层，对于一些大型网站基本上从 DNS 就开始负载均衡，负载均衡有硬件和软件之分，各自代表分别是 F5 和 Nginx （目前 Nginx 已经被 F5 收购），早些年，也可以使用 Apache 来做负载均衡，但是效率不如 Nginx ，所以现在主流方案是 Nginx 。</li><li>反向代理服务器<br>就是对于用户来说，用户只确定我请求的是某个位置的uri资源，但是这个资源是由谁来提供给我的，用户并不需要知道。就像我们日常打电话到110一样，你会有这样的疑问，全国都是打110，那么如果我身在北京打110会不会打到上海呢？哈哈，其实这就有点类似反向代理了，我们只需要知道我们打110，但是其真实的过程是网络默认在我们拨打的号码前加入了当地基站的前缀号码的缘故。</li></ul><h1 id="Nginx-的优势"><a href="#Nginx-的优势" class="headerlink" title="Nginx 的优势"></a>Nginx 的优势</h1><p>在 Java 开发中，Nginx 有着非常广泛的使用，随便举几点：</p><ol><li>使用 Nginx 做静态资源服务器：Java 中的资源可以分为动态和静态，动态需要经过 Tomcat 解析之后，才能返回给浏览器，例如 JSP 页面、Freemarker 页面、控制器返回的 JSON 数据等，都算作动态资源，动态资源经过了 Tomcat 处理，速度必然降低。对于静态资源，例如图片、HTML、JS、CSS 等资源，这种资源可以不必经过 Tomcat 解析，当客户端请求这些资源时，之间将资源返回给客户端就行了。此时，可以使用 Nginx 搭建静态资源服务器，将静态资源直接返回给客户端。</li><li>使用 Nginx 做负载均衡服务器，无论是使用 Dubbo 还是 Spirng Cloud ，除了使用各自自带的负载均衡策略之外，也都可以使用 Nginx 做负载均衡服务器。</li><li>支持高并发、内存消耗少、成本低廉、配置简单、运行稳定等。</li></ol><h1 id="Nginx-安装"><a href="#Nginx-安装" class="headerlink" title="Nginx 安装"></a>Nginx 安装</h1><p>因为我们日常的服务器都是选用的centos7的，所以在这里我就只介绍centos下nginx的安装，我们采用默认安装（即不主动设置安装目录）</p><ol><li>下载nginx<br><code>wget http://nginx.org/download/nginx-1.17.0.tar.gz</code><img src="3.webp"></li><li>解压<br><code>tar -zxvf nginx-1.17.0.tar.gz</code><img src="4.webp"></li><li>然后进入nginx-1.17.0目录<br>在编译安装之前，我们还需要安装两个依赖<br><code>yum -y install pcre-devel</code><img src="5.webp">和`yum -y install openssl openssl-devel`<img src="6.webp"></li><li>编译安装<br>依次执行如下命令：<br><code>./configure</code>、<img src="7.webp">`make`、<img src="8.webp">`make install`安装好之后，默认的安装位置是：`/usr/local/nginx/sbin/nginx`<img src="9.webp"></li><li>启动nginx<img src="10.webp">进入sbin目录，启动：`cd /usr/local/nginx/sbin`、`./nginx`即可启动了启动成功之后，我们访问本地的ip地址，即可看到如下界面：<img src="2.webp">看到如上页面，表示 Nginx 已经安装成功了如果修改了 Nginx 配置，则可以通过如下命令重新加载 Nginx 配置文件：`./nginx -s reload`</li></ol><h1 id="题外话"><a href="#题外话" class="headerlink" title="题外话"></a>题外话</h1><p>大家都知道，现在我们的项目一般都是采用前后端分离的开发方式，而前后端分离的项目在部署时只有两种方式：</p><ol><li>一种就是将前端项目打包编译之后，放到后端项目中（例如 Spring Boot 项目的 src/main/resources/static 目录下）</li><li>另外一种则是将前端打包之后的静态资源用 Nginx 来部署，后端单独部署只需要单纯的提供接口即可<br>一般在公司项目中，我们更多的是采用后者<br>在部署时，我们只需要将我们的项目打包成jar包，然后上传到服务器，然后执行该命令即可启动项目：<code>nohup java -jar demo.jar &gt; demo.log &amp;</code> (demo.jar 是我们打包后的包名，这只是一个例子，你替换成你的包名即可)<br>这样这个项目的运行日志就写入到 demo.log 文件中了</li></ol>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring boot程序的部署及运行</title>
      <link href="/2020/01/06/spring-boot-cheng-xu-de-bu-shu-ji-yun-xing/"/>
      <url>/2020/01/06/spring-boot-cheng-xu-de-bu-shu-ji-yun-xing/</url>
      
        <content type="html"><![CDATA[<h1 id="将-spring-boot-应用程序打包成-jar-包"><a href="#将-spring-boot-应用程序打包成-jar-包" class="headerlink" title="将 spring boot 应用程序打包成 jar 包"></a><font color="#FF8C00">将 spring boot 应用程序打包成 jar 包</font></h1><p> 我们使用 spring boot 的 maven 插件来构建管理整个应用程序，使用 <code>mvn package</code> 将应用程序打包成一个 jar 包</p><h1 id="将-该-jar-包上传到-服务器"><a href="#将-该-jar-包上传到-服务器" class="headerlink" title="将 该 jar 包上传到 服务器"></a>将 该 jar 包上传到 服务器</h1><p> 上传到服务器大致有两种方式（常见的）：1）通过 <code>xftp</code> 这种方式；2）本文将要介绍的这种，我不太建议使用 xftp，因为它太常见了，不新奇，<br> 说说第二种方式吧：首先我们在 linux 服务器上，下载 <code>lrzsz</code> 插件，命令为：<code>yum -y install lrzsz</code>,然后上传文件就输入命令：<code>rz -y</code>，<code>-y</code> 表示强制覆盖原有文件（建议使用），<code>rz</code> 表示上传，当然了，<code>sz</code> 就表示下载喽。之后就会打开一个 windows 的文件资源管理器窗口，你选择目标 jar 包即可实现上传（前提，选择好你的上传目录）</p><h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><p> 上传到服务器的指定位置了，接下来就是如何运行了！<br> 我们都知道，java 程序在你本地运行时就是选择好入口 main，然后运行即可。但是在 linux 上就不是那么简单了。<br> 大致呢有两种：一种是直接手动启动；一种是通过写一个脚本文件来启动。<br> 直接启动：<br> <code>java -jar 目标.jar &gt;&gt; catalina.out 2&gt;&amp;1 &amp;</code>,什么意思呢？就是将 tomcat（spring-boot-starter-web 自带 tomcat） 的启动内容 标准错误流重定向到标准输出流(2 &gt;&amp;1)，并且以在后台运行的形式去运行(&amp;)。</p><h1 id="脚本启动"><a href="#脚本启动" class="headerlink" title="脚本启动"></a>脚本启动</h1><p> 编写启动脚本</p><pre class="line-numbers language-sh"><code class="language-sh"> #!/bin/bash PROJECTNAME=目标jar名称(不需要带.jar) pid=`ps -ef |grep $PROJECTNAME |grep -v "grep" |awk '{print $2}'` if [ $pid ]; then ​    echo "$PROJECTNAME  is  running  and pid=$pid" else    echo "Start success to start $PROJECTNAME ...."    nohup java -jar 目标.jar  >> catalina.out  2>&1 & fi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 在该 <code>.sh</code>(脚本文件)中，使用到了命令 <code>nohup java -jar  ...</code> nohup 就是 no hangup（不挂起），即 即使用户登出，<br> 关闭终端后，该进程还会继续运行；采用 nohup 命令后，那么就会在当前脚本所在的同级目录下生成一个 <code>nohup.out</code> 的文件，<br> 该文件就记录了整个应用启动过程以及之后运行中的所有日志内容（因为我们是将 <code>2</code> 标准错误 作为输出内容的，<br> 而标准错误默认是包括所有的输出内容+错误内容）。之后你只需要运行这个脚本即可启动应用程序啦：<code>./start.sh</code>，<br> 如果你想查看一下日志内容，你可以输入：<code>vi nohup.out</code>，或者你只想查看最后几行内容：<code>tail -f nohup.out</code>即可。</p><h1 id="脚本关闭"><a href="#脚本关闭" class="headerlink" title="脚本关闭"></a>脚本关闭</h1><p> 编写关闭脚本:<br> 其实我们一般是不需要关闭脚本的，因为我们通常是这样操作的：进入到该应用程序所在的目录：<br> <code>ps aux | grep java</code> 或 <code>ps -ef |  grep java</code> 二者并没有什么太大的区别，看你喜欢用哪个命令了，<br> 然后找到该应用程序的 <code>pid</code>, 然后 <code>kill -g 该pid</code> 就杀死这个进程了。但是其实这样很麻烦，<br> 你习惯了还好，一般我还是建议你使用 关闭脚本的</p><pre class="line-numbers language-sh"><code class="language-sh"> #!/bin/bash PROJECTNAME=目标 pid=`ps -ef |grep $PROJECTNAME |grep -v "grep" |awk '{print $2}' ` if [ $pid ]; then ​    echo "$PROJECTNAME is  running  and pid=$pid" ​    kill -9 $pid ​    if [[ $? -eq 0 ]];then ​       echo "sucess to stop $PROJECTNAME " ​    else ​       echo "fail to stop $PROJECTNAME " ​     fi fi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>一般目录结构就是如下图所示：<br><img src="1.webp"></p><p>我实际中用的这个启动脚本内容如下：</p><img src="2.webp"><p>ps:至于有人说的可能需要在 pom.xml 中指定 入口类，我持保留意见</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring boot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java 中 IO 操作总结</title>
      <link href="/2020/01/06/java-zhong-io-cao-zuo-zong-jie/"/>
      <url>/2020/01/06/java-zhong-io-cao-zuo-zong-jie/</url>
      
        <content type="html"><![CDATA[<h1 id="java-IO-操作分析"><a href="#java-IO-操作分析" class="headerlink" title="java IO 操作分析"></a><font color="#FF8C00">java IO 操作分析</font></h1><p>直接看代码吧</p><pre class="line-numbers language-Java"><code class="language-Java">package jdk.util.sourceCode;import java.io.*;/** * 经常会遇到各种 IO 流操作，IO 流操作一般分为两类：字符流和字节流。 * 以 "Reader" 结尾都是字符流，操作的都是字符型的数据 * 以 "Stream" 结尾的都是字节流，操作的都是 byte 类型的数据 * 二者的区别： *  字节流没有缓冲区，是直接输出的；而字符流是先输出到缓冲区，然后在调用 close() 方法后再输出信息 *  处理对象不同，字节流能处理所有类型的数据，但是字符流只能处理字符类型的数据（只要是处理纯文本数据，就优先考虑使用字符流，除此之外都使用字节流） * java byte -> short -> int -> long    1byte -> 2byte -> 4byte -> 8byte * * * * InputStream 和 OutputStream 是各种输入输出字节流的基类，所有字节流都继承于这两个基类 * * * FileInputStream 和 FileOutputStream 这两个从字面意思很容易理解，是对文件的字节流操作，也是最常见的 IO 操作流 * * * 非流式文件类 -- File 类 *  从定义来看，File 类是 Object 的直接子类，同时它继承了 Comparable 接口可以进行数组的排序 *  File 类的操作包括文件的创建，删除，重命名，得到文件/文件夹的路径，创建时间等 *  File 类是对文件系统中文件以及文件夹进行封装的一个对象，可以通过对象的思想来操作文件和文件夹 * //** * @author: util.you.com@gmail.com * @date: 2019/5/25 15:40 * @description: * @version: 1.0 * @className: TestIO */public class TestIO {    public static void  main(String[] args){        // 1.调用 新建文件//        createFile("F:\\github\\util.you.com@gmail.com\\jdk\\src\\main\\java\\jdk\\util\\sourceCode\\", "测试io.txt");        // 2.调用删除文件//        deleteFile("F:\\github\\util.you.com@gmail.com\\jdk\\src\\main\\java\\jdk\\util\\sourceCode\\","测试io.txt");        // 3.调用创建文件夹//        createFolder("F:\\github\\util.you.com@gmail.com\\jdk\\src\\main\\java\\jdk\\util\\sourceCode\\", "测试io文件夹");        // 4.列出指定目录下面的所有文件，包括隐藏文件//        listFiles("F:\\github\\util.you.com@gmail.com\\jdk\\src\\main\\java\\jdk\\util\\sourceCode\\");        // 5.判断指定的 文件夹是否是一个 目录(即是否是一个 文件夹)//        isFolder("F:\\\\github\\\\util.you.com@gmail.com\\\\jdk\\\\src\\\\main\\\\java\\\\jdk\\\\util\\\\sourceCode\\", "测试io文件夹");        // 6. 向指定的文件中(需要在文件名中给出路径和文件名,我这里是为了简便这样写了)通过 字节流 写入数据 (这里前提：认为该文件已经存在,不需要再创建)//        writeFileByByte("F:\\github\\util.you.com@gmail.com\\jdk\\src\\main\\java\\jdk\\util\\sourceCode\\测试io.txt");        // 7.从指定的文件中读取内容//        readFileByByte("F:\\github\\util.you.com@gmail.com\\jdk\\src\\main\\java\\jdk\\util\\sourceCode\\测试io.txt");        // 8. 从 指定文件读取内容并写入到 目标文件        readWriteFile("F:\\game\\xx.mp4",                "E:\\github-project\\jdk\\src\\main\\java\\jdk\\util\\sourceCode\\测试io.txt");    }    /**     * 因为 io 流基本是与 File(文件/文件夹) 操作密不可分的，因此 io 的操作，只要涉及到文件，文件夹的都必须使用 File 类     * 在指定的路径下，新建一个 指定文件名的 文件     * @param path 文件路径     * @param fileName 文件名     */    public static void createFile(String path, String fileName){        // 因为是在 操作 文件，所以用到 File 对象【记住：所有与文件/文件夹操作相关的内容，都必须第一时间想到要用 File 对象】        File file = new File(path+fileName); // 实例化一个 file 操作对象        try {            file.createNewFile(); // 调用 file 文件/文件夹 实例对象的 方法，来新建文件            System.out.println("目标文件已存在: " + path + fileName);        } catch (IOException e) {            e.printStackTrace();        }    }    /**     * 删除一个指定路径下的 文件     * @param path 该文件的路径     * @param fileName 该文件的文件名     */    public static void deleteFile(String path, String fileName){        File file = new File(path+fileName);        if(file.exists()){            file.delete();            System.out.println("目标文件已删除");        }else{            System.out.println("要删除的目标文件不存在");        }    }    /**     * 新建一个 文件夹     * @param path 路径     * @param folderName 文件夹名     */    public static void createFolder(String path, String folderName){        File file = new File(path+folderName);        file.mkdir();        System.out.println("该文件夹已经存在于: " + path + folderName);    }    /**     * 列出指定目录下面的所有文件     * @param path 目录的路径名     */    public static void listFiles(String path){        File file = new File(path);        if (file.isDirectory()){            File[] fileArray = file.listFiles();            for (int i = 0; i < fileArray.length; i++){                System.out.println( "该目录下的文件: " + fileArray[i]);                System.out.println( "该目录下的文件或文件夹的名字: " + fileArray[i].getName());            }        }else{            System.out.println(path + " 目录不存在");        }    }    /**     * 判断给定的 文件夹 是否是一个目录     * @param path     */    public static void isFolder(String path, String folderName){        File file = new File(path + folderName);        if (file.isDirectory()){            System.out.println(path + folderName + " 是一个目录");        }else{            System.out.println(path + folderName + " 不是一个目录");        }    }    /**     * 通过 字节流 向 指定文件 写入内容     * @param fileName 文件名，这里为了简化，文件名中带上 路径     */    public static void writeFileByByte(String fileName){        File file = new File(fileName);        OutputStream outputStream = null; // 从内存中 写入内容 到 文件中，这是输出流，因此要用 输出流        // FileOutputStream 的构造器大体上有两类：一类是 传入一个带有文件名和文件路径的字符串；另一类是 传入一个 File 文件/文件夹对象        try {            outputStream = new FileOutputStream(file, true); // 给 file 文件对象 构造一个字节输出流        } catch (FileNotFoundException e) {            e.printStackTrace();        }        // 这里穿插一个小知识点，即我们 给一个 int 参数，但是我们要让 outputStream 以 byte[] 的形式写入,接下来就看 int 转 byte[] 吧        int a = 12345678; // 为什么这样呢？因为 一个 int 是 4个byte,所以一个 int 转成 byte[] 后，一定是里面包含4个byte元素的 byte[] 数组        byte[] b = new byte[]{                (byte) ((a >> 24) & 0xFF),                (byte) ((a >> 16) & 0xFF),                (byte) ((a >> 8) & 0xFF),                (byte) ((a ) & 0xFF)        };        try {            outputStream.write(b); // 这里还有一个问题没解决：写入的时候，选择编码格式(稍后解决)            outputStream.close();        }catch (IOException e) {                e.printStackTrace();            }    }    /**     * 通过 字节流 从 指定文件 读取输出内容     * @param fileName 文件名，这里为了简化，文件名中带上 路径     */    public static void readFileByByte(String fileName){        File file = new File(fileName);        InputStream inputStream = null; // 从 硬盘中 读取内容 到 内存中，这是 输入流，因此声明 输入流 对象        try {            inputStream = new FileInputStream(file);            // inputStream 读取内容有5个方法 read():默认读取一个byte,readBytes(byte b[], int off, int len)            // 这里我们采用 read(byte b[], int off, int len) 方法            byte[] byter = new byte[1024]; // 所以先实例化一个 byte[]            int len = inputStream.read(byter);            inputStream.close();            // 最后我们输出一下读取到的内容            System.out.println(new String(byter, 0, len));        } catch (Exception e) {            e.printStackTrace();        }    }    /**     * @author: util.you.com@gmail.com     * @param: [sourceFile, desFile]     * @return: void     * @date: 2019/5/25 18:04     * @version: 1.0     * @description: 最后来一个 从 指定文件中 读取内容 到 指定目标文件中     */    public static void readWriteFile(String sourceFile, String desFile){        File inputFile = new File(sourceFile);        File outputFile = new File(desFile);        InputStream inputStream = null;        OutputStream outputStream = null;        try {            inputStream = new FileInputStream(inputFile);            byte[] byter = new byte[1024];            inputStream.read(byter);            outputStream = new FileOutputStream(outputFile, true);            outputStream.write(byter);            outputStream.close();            inputStream.close();            System.out.println("操作完成");        }catch (Exception e){            System.out.println(e.getMessage());        }    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell知识点</title>
      <link href="/2020/01/05/shell-zhi-shi-dian/"/>
      <url>/2020/01/05/shell-zhi-shi-dian/</url>
      
        <content type="html"><![CDATA[<h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a><font color="#FF8C00">概念</font></h1><blockquote><p>啥叫shell脚本呢？其实就是一个批处理文件，里面写了许多的命令，只需要运行这个文件，就相当于一次执行了许多命令<br>shell脚本的后缀名是   .sh</p></blockquote><h1 id="一个最简单的shell示例"><a href="#一个最简单的shell示例" class="headerlink" title="一个最简单的shell示例"></a>一个最简单的shell示例</h1><h2 id="第一种书写shell脚本的方式"><a href="#第一种书写shell脚本的方式" class="headerlink" title="第一种书写shell脚本的方式"></a>第一种书写shell脚本的方式</h2><pre class="line-numbers language-shell"><code class="language-shell">#就相当于常规命令的操作集合lspwdls -lah  /bin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="如何执行它呢？"><a href="#如何执行它呢？" class="headerlink" title="如何执行它呢？"></a>如何执行它呢？</h3><ul><li>将这个文件命名为:  test.sh</li><li>然后给它修改权限： chmod u=x test.sh</li><li>然后执行:    ./test.sh即可（之所以加 <code>./</code> 是为了加载执行该脚本所必须的环境变量）<blockquote><p>一般我们约定凡是自定义的脚本建议放到  /usr/local/sbin/  目录下，这样做的目的是：一来可以更好地管理文档、二来以后接管你的管理员都知道自定义的脚本放在那里，方便维护</p></blockquote></li></ul><h2 id="第二种书写shell脚本的方式"><a href="#第二种书写shell脚本的方式" class="headerlink" title="第二种书写shell脚本的方式"></a>第二种书写shell脚本的方式</h2><pre class="line-numbers language-shell"><code class="language-shell">#! /bin/bash# #!是表示该文件使用是bash语法，如果不设置该行，那么你的shell脚本就不能被执行；#表示注释# In this script we will use variables# Writen by util.you.com@gmail.comd=`date`echo "the script begin at $d"echo "now we will sleep 2 seconds."sleep 2d1=`date`# 定义变量的格式：变量名=`变量的值`# 当在当前脚本中需要引用变量时，需要加上$符号即可echo "the script end at $d1"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后将该文件命名为 demo.sh【通常是以sh作为后缀的，只是习惯而已，没有sh也可以执行】<br>然后这样运行：<br><img src="1.webp"></p><h1 id="逻辑判断"><a href="#逻辑判断" class="headerlink" title="逻辑判断"></a>逻辑判断</h1><h2 id="if-else-的逻辑判断"><a href="#if-else-的逻辑判断" class="headerlink" title="if-else 的逻辑判断"></a>if-else 的逻辑判断</h2><ul><li>不带 else 的</li></ul><pre class="line-numbers language-shell"><code class="language-shell">#! /bin/bashecho -n "请输入你的成绩: "# read 命令表示从控制台读取内容，此处即是读取用户输入的数字并且赋值给变量 scoreread scoreif [ $score -lt 60 ]then  echo "抱歉，你没有通过考试."fi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行结果如下：<br><img src="2.webp"></p><ul><li>带有 else 的</li></ul><pre class="line-numbers language-shell"><code class="language-shell">#! /bin/bashecho -n "请输入你的成绩: "# read 命令表示从控制台读取内容，此处即是读取用户输入的数字并且赋值给变量 scoreread scoreif [ $score -lt 60 ]then  echo "抱歉，你没有通过考试."else  echo "恭喜你，顺利通过考试."fi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行结果如下：<br><img src="3.webp"></p><ul><li>带有 elif 的</li></ul><pre class="line-numbers language-shell"><code class="language-shell">#! /bin/bashecho -n "请输入你的成绩: "# read 命令表示从控制台读取内容，此处即是读取用户输入的数字并且赋值给变量 scoreread scoreif [ $score -lt 60 ] # 调用变量通过 $ 符号then  echo "抱歉，你没有通过考试."elif [ $score -gt 60 ] && [ $score -lt 90 ]then  echo "你的成绩属于中等水平"elif [ $score -gt 90 ] && [ $score -lt 100 ] # 注意：[] 符号前后必须有空格，否则报错then  echo "恭喜你，你的成绩属于优秀"else  echo "抱歉，你的输入有误."fi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行结果如下：<br><img src="4.webp"></p><h2 id="case-逻辑判断"><a href="#case-逻辑判断" class="headerlink" title="case 逻辑判断"></a>case 逻辑判断</h2><pre class="line-numbers language-shell"><code class="language-shell">#! /bin/bashread -p "请输入一个整数: " na=`expr $n % 2` # 凡是需要调用到内置函数处理的都需要使用表达式引号 ``case $a in  0)echo "您输入的数字是偶数.";;  *)echo "您输入的数字是奇数.";;esac<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行结果如下：<br><img src="5.webp"></p><h1 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h1><h2 id="for-循环"><a href="#for-循环" class="headerlink" title="for 循环"></a>for 循环</h2><pre class="line-numbers language-shell"><code class="language-shell">#!/bin/bashfor i in `seq 1 5`; do # seq: 用于产生从某个数到另外一个数之间的所有整数  echo $idone<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行结果如下：<br><img src="6.webp"></p><h2 id="while-循环"><a href="#while-循环" class="headerlink" title="while 循环"></a>while 循环</h2><pre class="line-numbers language-shell"><code class="language-shell">#! /bin/basha=10 # 注意：a 后面不要有空格while [ $a -ge 1 ]; do # 注意：[] 括号前后一定要有空格  echo "$a"  a=`expr $a - 1 ` # 注意：凡是使用到加减乘除等运算时，都需要使用 expr 表明此处需要运算符号done<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行结果如下：<br><img src="7.webp"></p><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><pre class="line-numbers language-shell"><code class="language-shell">#! /bin/bashecho "请输入两个整数，并使用空格隔开: "read num1 num2sum(){  a=`expr $num1 + $num2`  echo "$num1 + $num2 = $a"}sum $num1 $num2 # 注意：这里必须要调用sum函数，并且传入用户输入的两个参数<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行结果如下：<br><img src="8.webp"></p><h1 id="echo-的好玩点"><a href="#echo-的好玩点" class="headerlink" title="echo 的好玩点"></a>echo 的好玩点</h1><pre class="line-numbers language-shell"><code class="language-shell">#! /bin/bash        echo "Hello World 1"echo -n "Hello world" #不带换行echo -e "\e[0;33;1mhello\e[0m world" #带颜色的玩法echo -e "\e[0;33;4mhello\e[0m world" #带颜色+下划线echo -e "\e[0;33;5mhello\e[0m world" #带颜色+闪烁<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>格式为 <code>\e[背景色;前景色;高亮格式m</code></p></blockquote><p>执行结果如下：<br><img src="9.webp"></p><h1 id="字符串操作"><a href="#字符串操作" class="headerlink" title="字符串操作"></a>字符串操作</h1><h2 id="判断字符串是否为空"><a href="#判断字符串是否为空" class="headerlink" title="判断字符串是否为空"></a>判断字符串是否为空</h2><pre class="line-numbers language-shell"><code class="language-shell">#! /bin/bashs=""if [ -z ${s} ]  #注意：这里的[  ]前后必须有空格隔开，这个格式是固定的，shell中格式很严格thenecho "字符串为空"fi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行结果如下：<br><img src="10.webp"></p><blockquote><p>上述命令中使用了 <code>-z</code> 运算符来判断字符串是否为空（在下面的字符串图中可以查找到），在 linux 中还有许多其它的运算符，如下图所示：</p></blockquote><ul><li><p>关于文件测试的运算符</p><img src="11.webp"></li><li><p>关于字符串比较的运算符</p><img src="12.webp"></li></ul><h2 id="获取字符串的长度"><a href="#获取字符串的长度" class="headerlink" title="获取字符串的长度"></a>获取字符串的长度</h2><h3 id="使用-str-本身的方法"><a href="#使用-str-本身的方法" class="headerlink" title="使用 str 本身的方法"></a>使用 str 本身的方法</h3><pre class="line-numbers language-shell"><code class="language-shell">#! /bin/bashstr="abcdef"echo "$str 字符串的长度是：${#str}"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>执行结果如下：<br><img src="13.webp"></p><h3 id="使用-awk-的-length-方法"><a href="#使用-awk-的-length-方法" class="headerlink" title="使用 awk 的 length 方法"></a>使用 awk 的 length 方法</h3><pre class="line-numbers language-shell"><code class="language-shell">#! /bin/bashstr="abcdef"echo ${str} | awk '{print length($0)}' # 这里的 $0 表示是第一个输入，此处即指 ${str}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>执行结果如下：<br><img src="15.webp"><br><img src="14.webp"></p><blockquote><p>备注：最好用 <code>{}</code> 来放置变量；也可以用 <code>length($0)</code> 来统计文件中每行的长度</p></blockquote><h3 id="使用-wc-的-L-参数"><a href="#使用-wc-的-L-参数" class="headerlink" title="使用 wc 的 -L 参数"></a>使用 wc 的 -L 参数</h3><pre class="line-numbers language-shell"><code class="language-shell">#! /bin/bashstr="ABCDEF"echo ${str} | wc -L<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>执行结果如下：<br><img src="16.webp"></p><blockquote><p>备注：<code>-L</code> 参数，对多行文件来说，表示打印最长行的长度！比如：<code>cat /etc/passwd | wc -L</code> 表示/etc/passwd文件最长行的长度；<br>对单行字符串而言，表示当前字符串的长度</p></blockquote><h3 id="使用-expr-的-length-方法"><a href="#使用-expr-的-length-方法" class="headerlink" title="使用 expr 的 length 方法"></a>使用 expr 的 length 方法</h3><pre class="line-numbers language-shell"><code class="language-shell">#!/bin/bashstr="ABCDEF"expr length ${str}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>执行结果如下：<br><img src="17.webp"></p><h3 id="使用-expr-的-技巧"><a href="#使用-expr-的-技巧" class="headerlink" title="使用 expr 的 .* 技巧"></a>使用 expr 的 .* 技巧</h3><pre class="line-numbers language-shell"><code class="language-shell">#!/bin/bashstr="abef"expr $str : ".*"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>执行结果如下：<br><img src="18.webp"></p><blockquote><p>备注：<code>.*</code> 代表任意字符，即用任意字符来匹配字符串，结果是几就代表字符串的长度是几</p></blockquote><blockquote><p>关于获取字符串长度的方法很多，这里只是举例了几个，如果没有您需要的还请翻阅其它资料</p></blockquote><h2 id="替换目标字符串"><a href="#替换目标字符串" class="headerlink" title="替换目标字符串"></a>替换目标字符串</h2><img src="22.webp"><img src="23.webp"><h2 id="截取子字符串"><a href="#截取子字符串" class="headerlink" title="截取子字符串"></a>截取子字符串</h2><p>操作的API<br><img src="24.webp"></p><p>示例如下：<br><img src="25.webp"></p><h1 id="转义字符处理"><a href="#转义字符处理" class="headerlink" title="转义字符处理"></a>转义字符处理</h1><h2 id="关于整数的处理"><a href="#关于整数的处理" class="headerlink" title="关于整数的处理"></a>关于整数的处理</h2><img src="19.webp"><h2 id="关于逻辑处理"><a href="#关于逻辑处理" class="headerlink" title="关于逻辑处理"></a>关于逻辑处理</h2><img src="20.webp"><blockquote><p>小技巧：<code>&amp;&amp;</code>、<code>||</code> 还可以用来拼接命令，达到按前一个命令成功与否来决定是否执行后一个命令的效果</p></blockquote><p>示例如下：<br><img src="21.webp"></p><h1 id="文件名的获取"><a href="#文件名的获取" class="headerlink" title="文件名的获取"></a>文件名的获取</h1><pre class="line-numbers language-shell"><code class="language-shell">#!/bin/bashs="/root/test/dir/subdir/abc.txt"echo ${s##*/} # abc.txtecho ${s%/*} # /root/test/dir/subdirecho ${s##*.} # txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行结果如下：<br><img src="26.webp"></p><blockquote><p>小技巧：</p><ul><li>1、获取文件名：<code>${path##*/}</code> (相当于basename命令的功能) ，path只是一个变量名称而已；</li><li>2、获取目录名：<code>${path%/*}</code>（相当于dirname命令的功能）；</li><li>3、获取后缀名：<code>${path##*.}</code></li></ul></blockquote><h1 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h1><p>标准输入流、标准输出流、标准错误流<br><img src="27.webp"><br>重定向一览表<br><img src="28.webp"></p><h2 id="把程序打印的内容输出到文件"><a href="#把程序打印的内容输出到文件" class="headerlink" title="把程序打印的内容输出到文件"></a>把程序打印的内容输出到文件</h2><pre class="line-numbers language-shell"><code class="language-shell">#!/bin/bash#以下两种方式都会将 `Hello World`写入到hello.txt中（若不存在则创建）echo "Hello World" > hello.txt #hello.txt原有的内容将被覆盖echo "你好哦" >> hello.txt #hello.txt原有内容后追加'Hello World'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行结果如下：<br><img src="29.webp"><br><img src="30.webp"></p><h2 id="重定向标准错误流-stderr"><a href="#重定向标准错误流-stderr" class="headerlink" title="重定向标准错误流(stderr)"></a>重定向标准错误流(stderr)</h2><p>把程序的错误信息输出到文件，例如文件路径中不存在+++这个文件：</p><pre class="line-numbers language-shell"><code class="language-shell">#!/bin/bash#以下两种方式都会将输出的错误信息输出到 'err.txt'中（若不存在则创建）ls +++ 2> err.txtls +++ 2>> err.txt #err.txt原有内容后追加内容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行结果如下：<br><img src="31.webp"><br><img src="32.webp"><br>可以看到已经将你操作 <code>ls +++</code> 的错误成功地输出到 <code>err.txt</code> 中了</p><h1 id="查看当前目录大小"><a href="#查看当前目录大小" class="headerlink" title="查看当前目录大小"></a>查看当前目录大小</h1><pre class="line-numbers language-shell"><code class="language-shell">#! /bin/bashcap=`du -h --max-depth=1 ./`echo $cap<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>执行结果如下：<br><img src="33.webp"></p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>国内真实刑事案件</title>
      <link href="/2020/01/04/guo-nei-zhen-shi-xing-shi-an-jian/"/>
      <url>/2020/01/04/guo-nei-zhen-shi-xing-shi-an-jian/</url>
      
        <content type="html"><![CDATA[<h1 id="1992年河南洛阳美女任雪事件"><a href="#1992年河南洛阳美女任雪事件" class="headerlink" title="1992年河南洛阳美女任雪事件"></a><font color="#FF8C00">1992年河南洛阳美女任雪事件</font></h1><div style="width:100%;height:0px;position:relative;padding-bottom:56.250%;"><iframe src="https://streamable.com/s/qxs9f/wiidd" frameborder="0" width="100%" height="100%" allowfullscreen style="width:100%;height:100%;position:absolute;left:0px;top:0px;overflow:hidden;"></iframe></div><h1 id="1990年代末吉林省前郭县系列灭门事件"><a href="#1990年代末吉林省前郭县系列灭门事件" class="headerlink" title="1990年代末吉林省前郭县系列灭门事件"></a><font color="#0099ff">1990年代末吉林省前郭县系列灭门事件</font></h1><div style="width:100%;height:0px;position:relative;padding-bottom:56.250%;"><iframe src="https://streamable.com/s/l04bn/ptfuyu" frameborder="0" width="100%" height="100%" allowfullscreen style="width:100%;height:100%;position:absolute;left:0px;top:0px;overflow:hidden;"></iframe></div><h1 id="1983年震惊全国的内蒙古牙克石红旗沟事件"><a href="#1983年震惊全国的内蒙古牙克石红旗沟事件" class="headerlink" title="1983年震惊全国的内蒙古牙克石红旗沟事件"></a><font color="##CD5C5C">1983年震惊全国的内蒙古牙克石红旗沟事件</font></h1><div style="width:100%;height:0px;position:relative;padding-bottom:56.250%;"><iframe src="https://streamable.com/s/4mdnu/dekosw" frameborder="0" width="100%" height="100%" allowfullscreen style="width:100%;height:100%;position:absolute;left:0px;top:0px;overflow:hidden;"></iframe></div><h1 id="1992年跨越辽吉晋冀四省的恶性事件"><a href="#1992年跨越辽吉晋冀四省的恶性事件" class="headerlink" title="1992年跨越辽吉晋冀四省的恶性事件"></a><font color="##F08080">1992年跨越辽吉晋冀四省的恶性事件</font></h1><div style="width:100%;height:0px;position:relative;padding-bottom:56.250%;"><iframe src="https://streamable.com/s/i3mku/spytdn" frameborder="0" width="100%" height="100%" allowfullscreen style="width:100%;height:100%;position:absolute;left:0px;top:0px;overflow:hidden;"></iframe></div><h1 id="1994年山东济南厅级干部买凶事件"><a href="#1994年山东济南厅级干部买凶事件" class="headerlink" title="1994年山东济南厅级干部买凶事件"></a><font color="#FA8072">1994年山东济南厅级干部买凶事件</font></h1><div style="width:100%;height:0px;position:relative;padding-bottom:56.250%;"><iframe src="https://streamable.com/s/v2a9j/jxzae" frameborder="0" width="100%" height="100%" allowfullscreen style="width:100%;height:100%;position:absolute;left:0px;top:0px;overflow:hidden;"></iframe></div><h1 id="1996年南京大学刁爱青事件"><a href="#1996年南京大学刁爱青事件" class="headerlink" title="1996年南京大学刁爱青事件"></a><font color="#E9967A">1996年南京大学刁爱青事件</font></h1><div style="width:100%;height:0px;position:relative;padding-bottom:56.250%;"><iframe src="https://streamable.com/s/9wwj1/bhqnjn" frameborder="0" width="100%" height="100%" allowfullscreen style="width:100%;height:100%;position:absolute;left:0px;top:0px;overflow:hidden;"></iframe></div><h1 id="1998年福建仙游连环变态事件"><a href="#1998年福建仙游连环变态事件" class="headerlink" title="1998年福建仙游连环变态事件"></a><font color="#FFA07A">1998年福建仙游连环变态事件</font></h1><div style="width:100%;height:0px;position:relative;padding-bottom:56.250%;"><iframe src="https://streamable.com/s/tysmw/sjttwe" frameborder="0" width="100%" height="100%" allowfullscreen style="width:100%;height:100%;position:absolute;left:0px;top:0px;overflow:hidden;"></iframe></div><h1 id="2000-2003年横跨皖豫鲁冀4省骇人听闻的杨新海事件"><a href="#2000-2003年横跨皖豫鲁冀4省骇人听闻的杨新海事件" class="headerlink" title="2000-2003年横跨皖豫鲁冀4省骇人听闻的杨新海事件"></a><font color="#DC143C">2000-2003年横跨皖豫鲁冀4省骇人听闻的杨新海事件</font></h1><div style="width:100%;height:0px;position:relative;padding-bottom:56.250%;"><iframe src="https://streamable.com/s/n8jgo/djwzin" frameborder="0" width="100%" height="100%" allowfullscreen style="width:100%;height:100%;position:absolute;left:0px;top:0px;overflow:hidden;"></iframe></div><h1 id="2004年震惊全国的马加爵事件"><a href="#2004年震惊全国的马加爵事件" class="headerlink" title="2004年震惊全国的马加爵事件"></a><font color="#FF0000">2004年震惊全国的马加爵事件</font></h1><div style="width:100%;height:0px;position:relative;padding-bottom:56.250%;"><iframe src="https://streamable.com/s/xxw0z/qkzeyz" frameborder="0" width="100%" height="100%" allowfullscreen style="width:100%;height:100%;position:absolute;left:0px;top:0px;overflow:hidden;"></iframe></div><h1 id="2005年辽宁沈阳舞女神秘失踪系列事件"><a href="#2005年辽宁沈阳舞女神秘失踪系列事件" class="headerlink" title="2005年辽宁沈阳舞女神秘失踪系列事件"></a><font color="#B22222">2005年辽宁沈阳舞女神秘失踪系列事件</font></h1><div style="width:100%;height:0px;position:relative;padding-bottom:56.250%;"><iframe src="https://streamable.com/s/g3q6y/doyypl" frameborder="0" width="100%" height="100%" allowfullscreen style="width:100%;height:100%;position:absolute;left:0px;top:0px;overflow:hidden;"></iframe></div><h1 id="2009年北京大兴李磊事件"><a href="#2009年北京大兴李磊事件" class="headerlink" title="2009年北京大兴李磊事件"></a><font color="#8B0000">2009年北京大兴李磊事件</font></h1><div style="width:100%;height:0px;position:relative;padding-bottom:56.250%;"><iframe src="https://streamable.com/s/4tzzg/mcimyr" frameborder="0" width="100%" height="100%" allowfullscreen style="width:100%;height:100%;position:absolute;left:0px;top:0px;overflow:hidden;"></iframe></div><h1 id="2013年山东费县消失的夫妻事件-1"><a href="#2013年山东费县消失的夫妻事件-1" class="headerlink" title="2013年山东费县消失的夫妻事件-1"></a><font color="#FFC0CB">2013年山东费县消失的夫妻事件-1</font></h1><div style="width:100%;height:0px;position:relative;padding-bottom:56.250%;"><iframe src="https://streamable.com/s/i193a/drlxtm" frameborder="0" width="100%" height="100%" allowfullscreen style="width:100%;height:100%;position:absolute;left:0px;top:0px;overflow:hidden;"></iframe></div><h1 id="2013年山东费县消失的夫妻事件-2"><a href="#2013年山东费县消失的夫妻事件-2" class="headerlink" title="2013年山东费县消失的夫妻事件-2"></a><font color="#FFB6C1">2013年山东费县消失的夫妻事件-2</font></h1><div style="width:100%;height:0px;position:relative;padding-bottom:56.250%;"><iframe src="https://streamable.com/s/am0rg/xavckr" frameborder="0" width="100%" height="100%" allowfullscreen style="width:100%;height:100%;position:absolute;left:0px;top:0px;overflow:hidden;"></iframe></div><h1 id="2009年广西南宁三姐妹失踪事件"><a href="#2009年广西南宁三姐妹失踪事件" class="headerlink" title="2009年广西南宁三姐妹失踪事件"></a><font color="#FF69B4">2009年广西南宁三姐妹失踪事件</font></h1><div style="width:100%;height:0px;position:relative;padding-bottom:56.250%;"><iframe src="https://streamable.com/s/13wc9/ymurjh" frameborder="0" width="100%" height="100%" allowfullscreen style="width:100%;height:100%;position:absolute;left:0px;top:0px;overflow:hidden;"></iframe></div><h1 id="2012年江苏南京美女变麦乐鸡块事件-1"><a href="#2012年江苏南京美女变麦乐鸡块事件-1" class="headerlink" title="2012年江苏南京美女变麦乐鸡块事件-1"></a><font color="#FF1493">2012年江苏南京美女变麦乐鸡块事件-1</font></h1><div style="width:100%;height:0px;position:relative;padding-bottom:56.250%;"><iframe src="https://streamable.com/s/hhffp/awtcru" frameborder="0" width="100%" height="100%" allowfullscreen style="width:100%;height:100%;position:absolute;left:0px;top:0px;overflow:hidden;"></iframe></div><h1 id="2012年江苏南京美女变麦乐鸡块事件-2"><a href="#2012年江苏南京美女变麦乐鸡块事件-2" class="headerlink" title="2012年江苏南京美女变麦乐鸡块事件-2"></a><font color="#C71585">2012年江苏南京美女变麦乐鸡块事件-2</font></h1><div style="width:100%;height:0px;position:relative;padding-bottom:56.250%;"><iframe src="https://streamable.com/s/b7djt/dhmoph" frameborder="0" width="100%" height="100%" allowfullscreen style="width:100%;height:100%;position:absolute;left:0px;top:0px;overflow:hidden;"></iframe></div><h1 id="2012年令人毛骨悚然的云南张永明食人事件"><a href="#2012年令人毛骨悚然的云南张永明食人事件" class="headerlink" title="2012年令人毛骨悚然的云南张永明食人事件"></a><font color="#DB7093">2012年令人毛骨悚然的云南张永明食人事件</font></h1><div style="width:100%;height:0px;position:relative;padding-bottom:56.250%;"><iframe src="https://streamable.com/s/nyjvm/fvgftl" frameborder="0" width="100%" height="100%" allowfullscreen style="width:100%;height:100%;position:absolute;left:0px;top:0px;overflow:hidden;"></iframe></div><h1 id="2013年广东汕头女尸海上漂流事件"><a href="#2013年广东汕头女尸海上漂流事件" class="headerlink" title="2013年广东汕头女尸海上漂流事件"></a><font color="#FFA07A">2013年广东汕头女尸海上漂流事件</font></h1><div style="width:100%;height:0px;position:relative;padding-bottom:56.250%;"><iframe src="https://streamable.com/s/lgkh4/xdejxk" frameborder="0" width="100%" height="100%" allowfullscreen style="width:100%;height:100%;position:absolute;left:0px;top:0px;overflow:hidden;"></iframe></div><h1 id="2013年中国杭州扑克牌女尸事件"><a href="#2013年中国杭州扑克牌女尸事件" class="headerlink" title="2013年中国杭州扑克牌女尸事件"></a><font color="#FF7F50">2013年中国杭州扑克牌女尸事件</font></h1><div style="width:100%;height:0px;position:relative;padding-bottom:56.250%;"><iframe src="https://streamable.com/s/h91j9/oyzinm" frameborder="0" width="100%" height="100%" allowfullscreen style="width:100%;height:100%;position:absolute;left:0px;top:0px;overflow:hidden;"></iframe></div><h1 id="黑龙江省检察院检察官蒋英库事件-1"><a href="#黑龙江省检察院检察官蒋英库事件-1" class="headerlink" title="黑龙江省检察院检察官蒋英库事件-1"></a><font color="#FF6347">黑龙江省检察院检察官蒋英库事件-1</font></h1><div style="width:100%;height:0px;position:relative;padding-bottom:56.250%;"><iframe src="https://streamable.com/s/sgq4i/cawsgu" frameborder="0" width="100%" height="100%" allowfullscreen style="width:100%;height:100%;position:absolute;left:0px;top:0px;overflow:hidden;"></iframe></div><h1 id="黑龙江省检察院检察官蒋英库事件-2"><a href="#黑龙江省检察院检察官蒋英库事件-2" class="headerlink" title="黑龙江省检察院检察官蒋英库事件-2"></a><font color="#FF4500">黑龙江省检察院检察官蒋英库事件-2</font></h1><div style="width:100%;height:0px;position:relative;padding-bottom:56.250%;"><iframe src="https://streamable.com/s/cjfzc/wlhuhl" frameborder="0" width="100%" height="100%" allowfullscreen style="width:100%;height:100%;position:absolute;left:0px;top:0px;overflow:hidden;"></iframe></div><h1 id="1997年广东普宁7警察枪杀4个无辜村民事件"><a href="#1997年广东普宁7警察枪杀4个无辜村民事件" class="headerlink" title="1997年广东普宁7警察枪杀4个无辜村民事件"></a><font color="#FF8C00">1997年广东普宁7警察枪杀4个无辜村民事件</font></h1><div style="width:100%;height:0px;position:relative;padding-bottom:56.250%;"><iframe src="https://streamable.com/s/rfm13/zoamcv" frameborder="0" width="100%" height="100%" allowfullscreen style="width:100%;height:100%;position:absolute;left:0px;top:0px;overflow:hidden;"></iframe></div><h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><ul><li><input checked disabled type="checkbox"> 🎉 观看到以上视频的前提是您可以成功地FQ哦，不然看不到视频哦</li><li><input checked disabled type="checkbox"> 🏁 欢迎补充哦</li></ul>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 刑事案件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub上传大文件</title>
      <link href="/2019/12/30/github-shang-chuan-da-wen-jian/"/>
      <url>/2019/12/30/github-shang-chuan-da-wen-jian/</url>
      
        <content type="html"><![CDATA[<h1 id="github上传文件限制"><a href="#github上传文件限制" class="headerlink" title="github上传文件限制"></a>github上传文件限制</h1><p>github默认地上传文件限制是不超过100M，注意：是单个文件不能超过100M(注意：本篇的密码必须是SHA256加密后的密文)</p><h1 id="如何解决呢？"><a href="#如何解决呢？" class="headerlink" title="如何解决呢？"></a>如何解决呢？</h1><p>其实GitHub提供了 <code>LFS</code> 专门来处理这类大文件的。<br>如下：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 先安装 git lfs </span><span class="token function">git</span> lfs <span class="token function">install</span><span class="token comment" spellcheck="true"># 标记跟踪哪些大文件，可以单个标记，也可以使用模式匹配某类文件</span><span class="token function">git</span> lfs track <span class="token string">"*.mp4"</span><span class="token comment" spellcheck="true"># 之后就是常规的 add, commit, push 操作即可</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="这里以几个视频为例演示一下"><a href="#这里以几个视频为例演示一下" class="headerlink" title="这里以几个视频为例演示一下"></a>这里以几个视频为例演示一下</h1><div style="width:100%;height:0px;position:relative;padding-bottom:56.250%;margin-top: 20px;"><iframe src="https://streamable.com/s/58743/wcgvid" frameborder="0" width="100%" height="100%" allowfullscreen style="width:100%;height:100%;position:absolute;left:0px;top:0px;overflow:hidden;"></iframe></div><div style="width:100%;height:0px;position:relative;padding-bottom:56.250%;margin-top: 20px;"><iframe src="https://streamable.com/s/b5669/hfmwv" frameborder="0" width="100%" height="100%" allowfullscreen style="width:100%;height:100%;position:absolute;left:0px;top:0px;overflow:hidden;"></iframe></div><div style="width:100%;height:0px;position:relative;padding-bottom:56.250%;margin-top: 20px;"><iframe src="https://streamable.com/s/2rmg8/lhlzaj" frameborder="0" width="100%" height="100%" allowfullscreen style="width:100%;height:100%;position:absolute;left:0px;top:0px;overflow:hidden;"></iframe></div><div style="width:100%;height:0px;position:relative;padding-bottom:56.250%;margin-top: 20px;"><iframe src="https://streamable.com/s/4csf1/xjejxe" frameborder="0" width="100%" height="100%" allowfullscreen style="width:100%;height:100%;position:absolute;left:0px;top:0px;overflow:hidden;"></iframe></div><div style="width:100%;height:0px;position:relative;padding-bottom:56.250%;margin-top: 20px;"><iframe src="https://streamable.com/s/i9ndt/ofkxmf" frameborder="0" width="100%" height="100%" allowfullscreen style="width:100%;height:100%;position:absolute;left:0px;top:0px;overflow:hidden;"></iframe></div><div style="width:100%;height:0px;position:relative;padding-bottom:56.250%;margin-top: 20px;"><iframe src="https://streamable.com/s/ibw58/agdzyi" frameborder="0" width="100%" height="100%" allowfullscreen style="width:100%;height:100%;position:absolute;left:0px;top:0px;overflow:hidden;"></iframe></div><h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><ul><li><input checked disabled type="checkbox"> 🎉 观看到以上视频的前提是您可以成功地FQ哦，不然看不到视频哦</li><li><input checked disabled type="checkbox"> 🏁 欢迎补充哦</li></ul>]]></content>
      
      
      <categories>
          
          <category> 视频 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
            <tag> 视频 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3D相册示例</title>
      <link href="/2019/12/18/3d-xiang-ce-shi-li/"/>
      <url>/2019/12/18/3d-xiang-ce-shi-li/</url>
      
        <content type="html"><![CDATA[<h1 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h1><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width,initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>3d相册展示<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token selector">* </span><span class="token punctuation">{</span>            <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span>px<span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span>px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">html,        body </span><span class="token punctuation">{</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> silver<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.my-container</span> </span><span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span>px auto<span class="token punctuation">;</span>            <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">/*border-radius: 20px;*/</span>            <span class="token comment" spellcheck="true">/*background-color: firebrick;*/</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.my-container</span> <span class="token class">.photo</span> </span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">/*border-radius: 20px;*/</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>            <span class="token property">perspective</span><span class="token punctuation">:</span> <span class="token number">1200</span>px<span class="token punctuation">;</span>            <span class="token property">perspective-origin</span><span class="token punctuation">:</span> <span class="token number">613</span>px -<span class="token number">800</span>px<span class="token punctuation">;</span>            <span class="token property">animation</span><span class="token punctuation">:</span> shijiao <span class="token number">3</span>s linear infinite alternate <span class="token number">4</span>s<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token atrule"><span class="token rule">@keyframes</span> shijiao</span> <span class="token punctuation">{</span>            <span class="token selector">from </span><span class="token punctuation">{</span>                <span class="token property">perspective</span><span class="token punctuation">:</span> <span class="token number">1200</span>px<span class="token punctuation">;</span>                <span class="token property">perspective-origin</span><span class="token punctuation">:</span> <span class="token number">613</span>px -<span class="token number">800</span>px<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector">to </span><span class="token punctuation">{</span>                <span class="token property">perspective</span><span class="token punctuation">:</span> <span class="token number">1200</span>px<span class="token punctuation">;</span>                <span class="token property">perspective-origin</span><span class="token punctuation">:</span> <span class="token number">613</span>px <span class="token number">300</span>px<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.my-container</span> <span class="token class">.photo</span> <span class="token class">.container</span> </span><span class="token punctuation">{</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>            <span class="token property">transform-style</span><span class="token punctuation">:</span> preserve-<span class="token number">3</span>d<span class="token punctuation">;</span>            <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span>px auto<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">/*border-radius: 20px;*/</span>            <span class="token property">animation</span><span class="token punctuation">:</span> xuanzhuan <span class="token number">5</span>s linear <span class="token number">4</span>s infinite<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token atrule"><span class="token rule">@keyframes</span> xuanzhuan</span> <span class="token punctuation">{</span>            <span class="token selector">from </span><span class="token punctuation">{</span>                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span><span class="token number">0</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector">to </span><span class="token punctuation">{</span>                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>-<span class="token number">360</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.my-container</span> <span class="token class">.photo</span> <span class="token class">.container</span> <span class="token class">.img</span> </span><span class="token punctuation">{</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">/*background-color: darkgoldenrod;*/</span>            <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>            <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">/*border: 3px solid white;*/</span>            <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span>px <span class="token number">0</span>px <span class="token number">10</span>px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">.3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">img </span><span class="token punctuation">{</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">180</span>px<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">90</span>px<span class="token punctuation">;</span>            <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">10</span>px <span class="token number">5</span>px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.img1</span> </span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">/*background-color: red;*/</span>            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateZ</span><span class="token punctuation">(</span><span class="token number">0</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token property">animation</span><span class="token punctuation">:</span> zhuan<span class="token number">1</span> <span class="token number">4</span>s linear forwards<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token atrule"><span class="token rule">@keyframes</span> zhuan1</span> <span class="token punctuation">{</span>            <span class="token selector">14<span class="token class">.28</span>% </span><span class="token punctuation">{</span>                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-<span class="token number">212.1</span>px<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span><span class="token number">212.1</span>px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>-<span class="token number">45</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector">28<span class="token class">.56</span>% </span><span class="token punctuation">{</span>                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-<span class="token number">300</span>px<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span><span class="token number">0</span>px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>-<span class="token number">90</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector">42<span class="token class">.84</span>% </span><span class="token punctuation">{</span>                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-<span class="token number">212.1</span>px<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>-<span class="token number">212.1</span>px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>-<span class="token number">135</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector">57<span class="token class">.12</span>% </span><span class="token punctuation">{</span>                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span><span class="token number">0</span>px<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>-<span class="token number">300</span>px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>-<span class="token number">180</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector">71<span class="token class">.40</span>% </span><span class="token punctuation">{</span>                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span><span class="token number">212.1</span>px<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>-<span class="token number">212.1</span>px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>-<span class="token number">225</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector">85<span class="token class">.68</span>% </span><span class="token punctuation">{</span>                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span><span class="token number">300</span>px<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span><span class="token number">0</span>px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>-<span class="token number">270</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector">100% </span><span class="token punctuation">{</span>                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span><span class="token number">212.1</span>px<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span><span class="token number">212.1</span>px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>-<span class="token number">315</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.img2</span> </span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">/*background-color: black;*/</span>            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>-<span class="token number">10</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token property">animation</span><span class="token punctuation">:</span> zhuan<span class="token number">2</span> <span class="token number">3.5</span>s linear <span class="token number">.5</span>s forwards<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token atrule"><span class="token rule">@keyframes</span> zhuan2</span> <span class="token punctuation">{</span>            <span class="token selector">16<span class="token class">.6</span>% </span><span class="token punctuation">{</span>                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-<span class="token number">212.1</span>px<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span><span class="token number">212.1</span>px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>-<span class="token number">45</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector">33<span class="token class">.2</span>% </span><span class="token punctuation">{</span>                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-<span class="token number">300</span>px<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span><span class="token number">0</span>px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>-<span class="token number">90</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector">49<span class="token class">.8</span>% </span><span class="token punctuation">{</span>                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-<span class="token number">212.1</span>px<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>-<span class="token number">212.1</span>px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>-<span class="token number">135</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector">66<span class="token class">.4</span>% </span><span class="token punctuation">{</span>                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span><span class="token number">0</span>px<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>-<span class="token number">300</span>px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>-<span class="token number">180</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector">83% </span><span class="token punctuation">{</span>                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span><span class="token number">212.1</span>px<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>-<span class="token number">212.1</span>px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>-<span class="token number">225</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector">100% </span><span class="token punctuation">{</span>                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span><span class="token number">300</span>px<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span><span class="token number">0</span>px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>-<span class="token number">270</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.img3</span> </span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">/*background-color: khaki;*/</span>            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>-<span class="token number">20</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token property">animation</span><span class="token punctuation">:</span> zhuan<span class="token number">3</span> <span class="token number">3</span>s linear <span class="token number">1</span>s forwards<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token atrule"><span class="token rule">@keyframes</span> zhuan3</span> <span class="token punctuation">{</span>            <span class="token selector">20% </span><span class="token punctuation">{</span>                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-<span class="token number">212.1</span>px<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span><span class="token number">212.1</span>px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>-<span class="token number">45</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector">40% </span><span class="token punctuation">{</span>                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-<span class="token number">300</span>px<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span><span class="token number">0</span>px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>-<span class="token number">90</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector">60% </span><span class="token punctuation">{</span>                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-<span class="token number">212.1</span>px<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>-<span class="token number">212.1</span>px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>-<span class="token number">135</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector">80% </span><span class="token punctuation">{</span>                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span><span class="token number">0</span>px<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>-<span class="token number">300</span>px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>-<span class="token number">180</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector">100% </span><span class="token punctuation">{</span>                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span><span class="token number">212.1</span>px<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>-<span class="token number">212.1</span>px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>-<span class="token number">225</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.img4</span> </span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">/*background-color: violet;*/</span>            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>-<span class="token number">30</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token property">animation</span><span class="token punctuation">:</span> zhuan<span class="token number">4</span> <span class="token number">2.5</span>s linear <span class="token number">1.5</span>s forwards<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token atrule"><span class="token rule">@keyframes</span> zhuan4</span> <span class="token punctuation">{</span>            <span class="token selector">25% </span><span class="token punctuation">{</span>                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-<span class="token number">212.1</span>px<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span><span class="token number">212.1</span>px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>-<span class="token number">45</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector">50% </span><span class="token punctuation">{</span>                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-<span class="token number">300</span>px<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span><span class="token number">0</span>px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>-<span class="token number">90</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector">75% </span><span class="token punctuation">{</span>                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-<span class="token number">212.1</span>px<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>-<span class="token number">212.1</span>px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>-<span class="token number">135</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector">100% </span><span class="token punctuation">{</span>                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span><span class="token number">0</span>px<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>-<span class="token number">300</span>px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>-<span class="token number">180</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.img5</span> </span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">/*background-color: aqua;*/</span>            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>-<span class="token number">40</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token property">animation</span><span class="token punctuation">:</span> zhuan<span class="token number">5</span> <span class="token number">2</span>s linear <span class="token number">2</span>s forwards<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token atrule"><span class="token rule">@keyframes</span> zhuan5</span> <span class="token punctuation">{</span>            <span class="token selector">33<span class="token class">.3</span>% </span><span class="token punctuation">{</span>                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-<span class="token number">212.1</span>px<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span><span class="token number">212.1</span>px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>-<span class="token number">45</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector">66<span class="token class">.6</span>% </span><span class="token punctuation">{</span>                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-<span class="token number">300</span>px<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span><span class="token number">0</span>px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>-<span class="token number">90</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector">100% </span><span class="token punctuation">{</span>                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-<span class="token number">212.1</span>px<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>-<span class="token number">212.1</span>px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>-<span class="token number">135</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.img6</span> </span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">/*background-color: saddlebrown;*/</span>            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>-<span class="token number">50</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token property">animation</span><span class="token punctuation">:</span> zhuan<span class="token number">6</span> <span class="token number">1.5</span>s linear <span class="token number">2.5</span>s forwards<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token atrule"><span class="token rule">@keyframes</span> zhuan6</span> <span class="token punctuation">{</span>            <span class="token selector">50% </span><span class="token punctuation">{</span>                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-<span class="token number">212.1</span>px<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span><span class="token number">212.1</span>px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>-<span class="token number">45</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector">100% </span><span class="token punctuation">{</span>                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-<span class="token number">300</span>px<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span><span class="token number">0</span>px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>-<span class="token number">90</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.img7</span> </span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">/*background-color: darkblue;*/</span>            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>-<span class="token number">60</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token property">animation</span><span class="token punctuation">:</span> zhuan<span class="token number">7</span> <span class="token number">1</span>s linear <span class="token number">3</span>s forwards<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token atrule"><span class="token rule">@keyframes</span> zhuan7</span> <span class="token punctuation">{</span>            <span class="token selector">100% </span><span class="token punctuation">{</span>                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-<span class="token number">212.1</span>px<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span><span class="token number">212.1</span>px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>-<span class="token number">45</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.img8</span> </span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">/*background-color: hotpink;*/</span>            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>-<span class="token number">70</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token property">animation</span><span class="token punctuation">:</span> zhuan<span class="token number">8</span> <span class="token number">.5</span>s linear <span class="token number">3.5</span>s forwards<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token atrule"><span class="token rule">@keyframes</span> zhuan8</span> <span class="token punctuation">{</span>            <span class="token selector">100% </span><span class="token punctuation">{</span>                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateZ</span><span class="token punctuation">(</span><span class="token number">300</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>my-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>photo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img img1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1.jpg<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img img2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2.jpg<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img img3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>3.jpg<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img img4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>4.jpg<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img img5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>5.jpg<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img img6<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>6.jpg<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img img7<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>7.jpg<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img img8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>8.jpg<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img img9<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>9.jpg<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 相册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 相册 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>更好地使用google</title>
      <link href="/2019/12/18/geng-hao-di-shi-yong-google/"/>
      <url>/2019/12/18/geng-hao-di-shi-yong-google/</url>
      
        <content type="html"><![CDATA[<h1 id="精确搜索：双引号"><a href="#精确搜索：双引号" class="headerlink" title="精确搜索：双引号"></a>精确搜索：双引号</h1><blockquote><p>精确搜索就是在你要搜索的词上，加上双引号，这时google就会完全的匹配你所要搜索的字符串<br><code>&quot;今日黄瓜&quot;</code></p></blockquote><h1 id="站内搜索：site"><a href="#站内搜索：site" class="headerlink" title="站内搜索：site"></a>站内搜索：site</h1><blockquote><p>例如我想在stackoverflow中搜索spring boot，如下输入即可：<br><code>site:stackoverflow.com spring boot</code> 【输不输入请求协议均可，当然你也可以这样: site:<a href="https://stackoverflow.com" target="_blank" rel="noopener">https://stackoverflow.com</a> spring boot】</p></blockquote><h1 id="通配符搜索："><a href="#通配符搜索：" class="headerlink" title="通配符搜索：*"></a>通配符搜索：*</h1><blockquote><p>例如我想搜索所有包含 熔炉 的网页，此时就可以这样搜索：<br><code>* 熔炉</code> ， 此时就会出现所有开头任意字符串，但是一定包含关键词熔炉的结果。【可以想象sql语句中的模糊匹配哦】</p></blockquote><h1 id="过滤掉某些条件："><a href="#过滤掉某些条件：" class="headerlink" title="过滤掉某些条件：-"></a>过滤掉某些条件：-</h1><blockquote><p>例如我想搜索一下 人口，但是想排除掉包含有中国的字样，可以如下使用：<br><code>人口 -中国</code></p></blockquote><h1 id="搜索文档：filetype"><a href="#搜索文档：filetype" class="headerlink" title="搜索文档：filetype"></a>搜索文档：filetype</h1><blockquote><p>例如我想搜索关于 golang 语言的pdf文档，应该如下搜索：<br><code>filetype:pdf golang</code></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>韩国高分电影推荐</title>
      <link href="/2019/12/16/han-guo-gao-fen-dian-ying-tui-jian/"/>
      <url>/2019/12/16/han-guo-gao-fen-dian-ying-tui-jian/</url>
      
        <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><blockquote><p>此处推荐的都是韩国高分犯罪类电影，因为我个人特别喜欢，当然了韩国的这一类电影在世界电影史上都是独树一帜，基本都是妥妥地高分电影（ps：此处不讨论国内国外电影优劣，毕竟没啥可比性哦）</p></blockquote><h1 id="欢迎自荐"><a href="#欢迎自荐" class="headerlink" title="欢迎自荐"></a>欢迎自荐</h1><blockquote><p>本页面持续更新，欢迎大家将好看的影视留言更新哦</p></blockquote><h1 id="名单"><a href="#名单" class="headerlink" title="名单"></a>名单</h1><img src="燃烧.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/3679.html','_blank')" alt="燃烧" title="燃烧"><img src="圣殇.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/19403.html','_blank')" alt="圣殇" title="圣殇"><img src="恐怖直播.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/20716.html','_blank')" alt="恐怖直播" title="恐怖直播"><img src="老男孩.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/19975.html','_blank')" alt="老男孩" title="老男孩"><img src="小姐.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/22938.html','_blank')" title="小姐" alt="小姐"><img src="追击者.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/10221.html','_blank')" title="追击者" alt="追击者"><img src="向日葵.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/23400.html','_blank')" title="向日葵" alt="向日葵"><img src="检察官外传.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/32705.html','_blank')" title="检察官外传" alt="检察官外传"><img src="春夏秋冬又一春.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/22633.html','_blank')" title="春夏秋冬又一春" alt="春夏秋冬又一春"><img src="卑劣的街头.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/16769.html','_blank')" title="卑劣的街头" alt="卑劣的街头"><img src="法外之徒.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/18043.html','_blank')" title="法外之徒" alt="法外之徒"><img src="辩护人.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/10938.html','_blank')" title="辩护人" alt="辩护人"><img src="新世界.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/13058.html','_blank')" title="新世界" alt="新世界"><img src="7号房的礼物.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/7862.html','_blank')" title="7号房的礼物" alt="7号房的礼物"><img src="金福南杀人事件始末.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/14354.html','_blank')" title="金福南杀人事件始末" alt="金福南杀人事件始末"><img src="回家的路.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/21468.html','_blank')" title="回家的路" alt="回家的路"><img src="素媛.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/6053.html','_blank')" title="素媛" alt="素媛"><img src="隧道.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/36497.html','_blank')" title="隧道" alt="隧道"><img src="奇怪的她.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.juji.tv/dianying/qiguaideta/play-3513-0-1.html','_blank')" title="奇怪的她" alt="奇怪的她"><img src="蚯蚓.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/7138.html','_blank')" title="蚯蚓" alt="蚯蚓"><img src="魔女.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/4526.html','_blank')" title="魔女" alt="魔女"><img src="收件人.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/50603.html','_blank')" title="收件人不详" alt="收件人不详"><img src="蒙太奇.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/3344.html','_blank')" title="蒙太奇" alt="蒙太奇"><img src="孤胆特工.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/18329.html','_blank')" title="孤胆特工" alt="孤胆特工"><img src="走到尽头.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/6298.html','_blank')" title="走到尽头" alt="走到尽头"><img src="不可饶恕.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/19816.html','_blank')" title="不可饶恕" alt="不可饶恕"><img src="流感.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/6075.html','_blank')" title="流感" alt="流感"><img src="寄生虫.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/34729.html','_blank')" title="寄生虫" alt="寄生虫"><img src="杀人回忆.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/9511.html','_blank')" title="杀人回忆" alt="杀人回忆"><img src="雪国列车.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/10935.html','_blank')" title="雪国列车" alt="雪国列车"><img src="盗贼同盟.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/22779.html','_blank')" title="盗贼同盟" alt="盗贼同盟"><img src="隐秘而伟大.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/12558.html','_blank')" title="隐秘而伟大" alt="隐秘而伟大"><img src="亲切的金子.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/24854.html','_blank')" title="亲切的金子" alt="亲切的金子"><img src="熔炉.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/5737.html','_blank')" title="熔炉" alt="熔炉"><img src="黄海.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/20715.html','_blank')" title="黄海" alt="黄海"><img src="金氏漂流记.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/26796.html','_blank')" title="金氏漂流记" alt="金氏漂流记"><img src="北逃.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/29229.html','_blank')" title="北逃" alt="北逃"><img src="奸臣.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/20666.html','_blank')" title="奸臣" alt="奸臣"><img src="狩猎.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/25115.html','_blank')" title="狩猎" alt="狩猎"><img src="老手.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/11336.html','_blank')" title="老手" alt="老手"><img src="海雾.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/29026.html','_blank')" title="海雾" alt="海雾"><img src="苔藓.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/26341.html','_blank')" title="苔藓" alt="苔藓"><img src="老千.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/6126.html','_blank')" title="老千" alt="老千"><img src="再审.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/704.html','_blank')" title="再审" alt="再审"><img src="陷阱.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/29783.html','_blank')" title="陷阱" alt="陷阱"><img src="局内人.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/20769.html','_blank')" title="局内人" alt="局内人"><img src="狼少年.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/21606.html','_blank')" title="狼少年" alt="狼少年"><img src="孩子们.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/21361.html','_blank')" title="孩子们" alt="孩子们"><img src="实尾岛.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/24157.html','_blank')" title="实尾岛" alt="实尾岛"><img src="共谋者.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/29877.html','_blank')" title="共谋者" alt="共谋者"><img src="看见恶魔.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/20935.html','_blank')" title="看见恶魔" alt="看见恶魔"><img src="那家伙的声音.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/19606.html','_blank')" title="那家伙的声音" alt="那家伙的声音"><img src="负罪少女.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/21469.html','_blank')" title="负罪少女" alt="负罪少女"><img src="野兽.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/38968.html','_blank')" title="野兽" alt="野兽"><img src="坏家伙们2019.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.juji.tv/dianying/huaijiahuomen2019/','_blank')" title="坏家伙们2019" alt="坏家伙们2019"><img src="恶人传.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/34347.html','_blank')" title="恶人传" alt="恶人传"><img src="一对一.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/23984.html','_blank')" title="一对一 일대일（2014）" alt="一对一 일대일（2014）"><img src="犯罪都市.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/1532.html','_blank')" title="犯罪都市" alt="犯罪都市"><img src="暴力圈.jpg" style="border-radius: 10px;" onclick="javascript:window.open('https://www.dandanzan.com/dianying/32602.html','_blank')" title="暴力圈" alt="暴力圈">]]></content>
      
      
      <categories>
          
          <category> 影视 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 韩剧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql触发器</title>
      <link href="/2019/12/13/mysql-hong-fa-qi/"/>
      <url>/2019/12/13/mysql-hong-fa-qi/</url>
      
        <content type="html"><![CDATA[<h1 id="mysql-触发器"><a href="#mysql-触发器" class="headerlink" title="mysql 触发器"></a>mysql 触发器</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这里呢，有两张表，分别是 <code>CXY_TS_ORDER_TICKET</code> 和 <code>CXY_TS_ORDER_TICKET_STATUS</code> 表，在 <code>CXY_TS_ORDER_TICKET</code> <code>表里面有一个</code>get_status<code>字段，现在呢，我们想在该字段发生变化时，在</code>CXY_TS_ORDER_TICKET_STATUS` 表中，将该字段插入，并且记录变化时间以及发生变化的记录的主键。因此呢，我打算用触发器去实现这个需求</p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><pre class="line-numbers language-mysql"><code class="language-mysql">-- Created by util.you.com@gmail.comdelimiter $$CREATE TRIGGER `order_ticket_status_trigger` AFTER UPDATE ON `CXY_TS_ORDER_TICKET` FOR EACH ROW BEGIN     DECLARE s1 INT(11); -- 声明变量，用于存入 CXY_TS_ORDER_TICKET 表的 get_status 字段值,id 字段值    DECLARE s2 INT(11);     set s2 = new.id; -- 分别给 s1 和 s2 赋值    set s1 = new.get_status;    IF((old.get_status != new.get_status) OR (old.get_status IS NULL && new.get_status IS NOT NULL)) THEN        INSERT INTO `CXY_TS_ORDER_TICKET_STATUS`(`order_ticket_id`, `STATUS`, `insert_date_time`) VALUES(s2, s1, DATE_FORMAT(now(),'%Y-%m-%d %H:%i:%s'));    END IF; END$$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h2><blockquote><p>在 mysql 中，<code>new</code>、<code>old</code>都是内置的，分别表示一个字段发生变化前、后的值（当然也包括插入操作前后的变化），此处呢，因为我们需要根据 <code>CXY_TS_ORDER_TICKET</code>表的 <code>get_status</code>字段来插入记录到 <code>CXY_TS_ORDER_TICKET_STATUS</code> 表，因此呢，new 和 old 都取该字段即可。</p><p><code>mysql</code> 中的触发器呢，大致分为三类：<code>insert</code> 型、<code>update</code> 型、<code>delete</code> 型。</p><p>何时触发该操作呢，又分为 <code>after</code>  和 <code>before</code> 型</p><p>上示例子，就是一个触发器的大致模板，根据哪一张表的变化来触发该触发器，就 <code>on</code> 这张表即可了。</p></blockquote><img src="1.jpg" style="border-radius: 10px;">]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis 中 resultMap 的使用</title>
      <link href="/2019/12/13/mybatis-zhong-resultmap-de-shi-yong/"/>
      <url>/2019/12/13/mybatis-zhong-resultmap-de-shi-yong/</url>
      
        <content type="html"><![CDATA[<h1 id="Mybatis-中-resultMap-的使用"><a href="#Mybatis-中-resultMap-的使用" class="headerlink" title="Mybatis 中 resultMap 的使用"></a>Mybatis 中 resultMap 的使用</h1><blockquote><p>最关键的是明白 resultMap 的两个最重要的作用：</p><p><em>-1</em> ：当你在 select 中，<code>resultType</code>  是一个 Entity(或 Model等 pojo 时)，如果你的 sql 结果集字段与你的 <code>pojo</code> 属性名不一致时，这时可以通过 <code>resultMap</code> 起到 重新映射成你 <code>pojo</code> 中名字的结果集</p><p><em>-2</em> :  第二个作用应该是使用量最多的一种，就是涉及到多对一的结果集映射或者一对多的结果集映射时</p></blockquote><h2 id="先说一下-resultMap-中-的-association-和-collection-的区别"><a href="#先说一下-resultMap-中-的-association-和-collection-的区别" class="headerlink" title="先说一下 resultMap 中 的 association 和 collection 的区别"></a>先说一下 resultMap 中 的 association 和 collection 的区别</h2><blockquote><p><code>association</code> 用于 <code>一对一</code> 和 <code>多对一</code>的情况</p><p><code>collection</code> 用于 <code>一对一</code>  和 <code>一对多</code> 的情况</p></blockquote><h3 id="举例如下"><a href="#举例如下" class="headerlink" title="举例如下"></a>举例如下</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!--created by util.you.com@gmail.com search--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>java.util.Map<span class="token punctuation">"</span></span> <span class="token attr-name">resultMap</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>reFundList<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        SELECT            csr.id,            csr.strategy_name,            csr.remark,            csr.`status`,            sut.username,            DATE_FORMAT(IFNULL(csr.insert_time, ''), '%Y-%m-%d %H:%i:%s') AS insert_time        FROM            `CL_STRATEGY_REFUND` AS csr        LEFT JOIN            `SYS_USER_TBL` AS sut ON sut.user_id = csr.insert_user_id        WHERE            csr.`status` = 1        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>strategyName !<span class="token punctuation">=</span> null and strategyName !<span class="token punctuation">=</span> <span class="token punctuation">'</span><span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            AND csr.strategy_name LIKE CONCAT('%',#{strategyName}, '%')        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">></span></span>            ORDER BY csr.id DESC        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>offset !<span class="token punctuation">=</span> null and limit !<span class="token punctuation">=</span> null<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            limit #{offset}, #{limit}        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">></span></span>        ;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--created by util.you.com@gmail.com search 因为这里返回类型(即封装类型)是 Map，所以 property 的值就是 Map 封装的 key 名称--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resultMap</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>reFundList<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>java.util.Map<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>strategy_name<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>strategyName<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>remark<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>remark<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>userName<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>insert_time<span class="token punctuation">"</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>insertTime<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>collection</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ruleList<span class="token punctuation">"</span></span> <span class="token attr-name">javaType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ArrayList<span class="token punctuation">"</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span> <span class="token attr-name">select</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>selectReFundInfo<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resultMap</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--created by util.you.com@gmail.com search--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>selectReFundInfo<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>java.lang.Integer<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>java.util.Map<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        select            csrr.id,            csrr.strategy_id,            csrr.time_limit,            csrr.fee_type,            csrr.fee_value        from            `CL_STRATEGY_REFUND_REL` as csrr        where            csrr.`status` = 1 and csrr.strategy_id = #{id}    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意点请看下图<br><img src="1.png" style="border-radius: 10px;"><br><img src="2.png" style="border-radius: 10px;"></p></blockquote><h1 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h1><blockquote><p><strong><em>原创手敲不易，转载请注明出处，谢谢</em></strong>。我是<a href="https://segmentfault.com/u/siben" target="_blank" rel="noopener">拉丁小毛</a>，欢迎大家关注我哦，一起交流，共同进步。有问题可以<code>邮我哦(util.you.com@gmail.com)</code></p></blockquote><p>  推荐一波我的新个人博客哦，欢迎大家访问哦<a href="https://latinos-bub.gitlab.io" target="_blank" rel="noopener">新个人博客哦</a></p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>掌握简单的git命令</title>
      <link href="/2019/12/13/zhang-wo-jian-dan-de-git-ming-ling/"/>
      <url>/2019/12/13/zhang-wo-jian-dan-de-git-ming-ling/</url>
      
        <content type="html"><![CDATA[<h1 id="编辑提交-editting-commits"><a href="#编辑提交-editting-commits" class="headerlink" title="编辑提交(editting commits)"></a>编辑提交(editting commits)</h1><h2 id="我刚才提交了什么"><a href="#我刚才提交了什么" class="headerlink" title="我刚才提交了什么?"></a>我刚才提交了什么?</h2><p>如果你用 <code>git commit -a</code> 提交了一次变化(changes)，而你又不确定到底这次提交了哪些内容。 你就可以用下面的命令显示当前<code>HEAD</code>上的最近一次的提交(commit):</p><pre class="line-numbers language-sh"><code class="language-sh">git show<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者</p><pre class="line-numbers language-sh"><code class="language-sh">git log -n1 -p<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a name="#i-wrote-the-wrong-thing-in-a-commit-message"></a></p><h2 id="我的提交信息-commit-message-写错了"><a href="#我的提交信息-commit-message-写错了" class="headerlink" title="我的提交信息(commit message)写错了"></a>我的提交信息(commit message)写错了</h2><p>如果你的提交信息(commit message)写错了且这次提交(commit)还没有推(push), 你可以通过下面的方法来修改提交信息(commit message):</p><pre class="line-numbers language-sh"><code class="language-sh">git commit --amend --only<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这会打开你的默认编辑器, 在这里你可以编辑信息. 另一方面, 你也可以用一条命令一次完成:</p><pre class="line-numbers language-sh"><code class="language-sh">git commit --amend --only -m 'xxxxxxx'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果你已经推(push)了这次提交(commit), 你可以修改这次提交(commit)然后强推(force push), 但是不推荐这么做。</p><p><a name="commit-wrong-author"></a></p><h2 id="我提交-commit-里的用户名和邮箱不对"><a href="#我提交-commit-里的用户名和邮箱不对" class="headerlink" title="我提交(commit)里的用户名和邮箱不对"></a>我提交(commit)里的用户名和邮箱不对</h2><p>如果这只是单个提交(commit)，修改它：</p><pre class="line-numbers language-sh"><code class="language-sh">git commit --amend --author "New Authorname <authoremail@mydomain.com>"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果你需要修改所有历史, 参考 ‘git filter-branch’的指南页.</p><p><a href="#i-want-to-remove-a-file-from-a-commit"></a></p><h2 id="我想从一个提交-commit-里移除一个文件"><a href="#我想从一个提交-commit-里移除一个文件" class="headerlink" title="我想从一个提交(commit)里移除一个文件"></a>我想从一个提交(commit)里移除一个文件</h2><p>通过下面的方法，从一个提交(commit)里移除一个文件:</p><pre class="line-numbers language-sh"><code class="language-sh">git checkout HEAD^ myfilegit add -Agit commit --amend<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这将非常有用，当你有一个开放的补丁(open patch)，你往上面提交了一个不必要的文件，你需要强推(force push)去更新这个远程补丁。</p><p><a name="delete-pushed-commit"></a></p><h2 id="我想删除我的的最后一次提交-commit"><a href="#我想删除我的的最后一次提交-commit" class="headerlink" title="我想删除我的的最后一次提交(commit)"></a>我想删除我的的最后一次提交(commit)</h2><p>如果你需要删除推了的提交(pushed commits)，你可以使用下面的方法。可是，这会不可逆的改变你的历史，也会搞乱那些已经从该仓库拉取(pulled)了的人的历史。简而言之，如果你不是很确定，千万不要这么做。</p><pre class="line-numbers language-sh"><code class="language-sh">git reset HEAD^ --hardgit push -f [remote] [branch]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>如果你还没有推到远程, 把Git重置(reset)到你最后一次提交前的状态就可以了(同时保存暂存的变化):</p><pre class="line-numbers language-shell"><code class="language-shell">git reset --soft HEAD@{1}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这只能在没有推送之前有用. 如果你已经推了, 唯一安全能做的是 <code>git revert SHAofBadCommit</code>， 那会创建一个新的提交(commit)用于撤消前一个提交的所有变化(changes)； 或者, 如果你推的这个分支是rebase-safe的 (例如： 其它开发者不会从这个分支拉), 只需要使用 <code>git push -f</code>； 更多, 请参考 <a href="#deleteremove-last-pushed-commit">the above section</a>。</p><p><a name="delete-any-commit"></a></p><h2 id="删除任意提交-commit"><a href="#删除任意提交-commit" class="headerlink" title="删除任意提交(commit)"></a>删除任意提交(commit)</h2><p>同样的警告：不到万不得已的时候不要这么做.</p><pre class="line-numbers language-sh"><code class="language-sh">git rebase --onto SHA1_OF_BAD_COMMIT^ SHA1_OF_BAD_COMMITgit push -f [remote] [branch]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>或者做一个 <a href="#interactive-rebase">交互式rebase</a> 删除那些你想要删除的提交(commit)里所对应的行。</p><p><a name="#force-push"></a></p><h2 id="我尝试推一个修正后的提交-amended-commit-到远程，但是报错："><a href="#我尝试推一个修正后的提交-amended-commit-到远程，但是报错：" class="headerlink" title="我尝试推一个修正后的提交(amended commit)到远程，但是报错："></a>我尝试推一个修正后的提交(amended commit)到远程，但是报错：</h2><pre class="line-numbers language-sh"><code class="language-sh">To https://github.com/yourusername/repo.git! [rejected]        mybranch -> mybranch (non-fast-forward)error: failed to push some refs to 'https://github.com/tanay1337/webmaker.org.git'hint: Updates were rejected because the tip of your current branch is behindhint: its remote counterpart. Integrate the remote changes (e.g.hint: 'git pull ...') before pushing again.hint: See the 'Note about fast-forwards' in 'git push --help' for details.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意, rebasing(见下面)和修正(amending)会用一个<strong>新的提交(commit)代替旧的</strong>, 所以如果之前你已经往远程仓库上推过一次修正前的提交(commit)，那你现在就必须强推(force push) (<code>-f</code>)。 注意 &ndash; <em>总是</em> 确保你指明一个分支!</p><pre class="line-numbers language-sh"><code class="language-sh">(my-branch)git push origin mybranch -f<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>一般来说, <strong>要避免强推</strong>. 最好是创建和推(push)一个新的提交(commit)，而不是强推一个修正后的提交。后者会使那些与该分支或该分支的子分支工作的开发者，在源历史中产生冲突。</p><p><a href="undo-git-reset-hard"></a></p><h2 id="我意外的做了一次硬重置-hard-reset-，我想找回我的内容"><a href="#我意外的做了一次硬重置-hard-reset-，我想找回我的内容" class="headerlink" title="我意外的做了一次硬重置(hard reset)，我想找回我的内容"></a>我意外的做了一次硬重置(hard reset)，我想找回我的内容</h2><p>如果你意外的做了 <code>git reset --hard</code>, 你通常能找回你的提交(commit), 因为Git对每件事都会有日志，且都会保存几天。</p><pre class="line-numbers language-sh"><code class="language-sh">git reflog<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>你将会看到一个你过去提交(commit)的列表, 和一个重置的提交。 选择你想要回到的提交(commit)的SHA，再重置一次:</p><pre class="line-numbers language-sh"><code class="language-sh">git reset --hard SHA1234<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这样就完成了。</p><h1 id="暂存-Staging"><a href="#暂存-Staging" class="headerlink" title="暂存(Staging)"></a>暂存(Staging)</h1><p><a href="#i-need-to-add-staged-changes-to-the-previous-commit"></a></p><h2 id="我需要把暂存的内容添加到上一次的提交-commit"><a href="#我需要把暂存的内容添加到上一次的提交-commit" class="headerlink" title="我需要把暂存的内容添加到上一次的提交(commit)"></a>我需要把暂存的内容添加到上一次的提交(commit)</h2><pre class="line-numbers language-sh"><code class="language-sh">git commit --amend<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a name="commit-partial-new-file"></a></p><h2 id="我想要暂存一个新文件的一部分，而不是这个文件的全部"><a href="#我想要暂存一个新文件的一部分，而不是这个文件的全部" class="headerlink" title="我想要暂存一个新文件的一部分，而不是这个文件的全部"></a>我想要暂存一个新文件的一部分，而不是这个文件的全部</h2><p>一般来说, 如果你想暂存一个文件的一部分, 你可这样做:</p><pre class="line-numbers language-sh"><code class="language-sh">git add --patch filename.x<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>-p</code> 简写。这会打开交互模式， 你将能够用 <code>s</code> 选项来分隔提交(commit)； 然而, 如果这个文件是新的, 会没有这个选择， 添加一个新文件时, 这样做:</p><pre class="line-numbers language-sh"><code class="language-sh">git add -N filename.x<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后, 你需要用 <code>e</code> 选项来手动选择需要添加的行，执行 <code>git diff --cached</code> 将会显示哪些行暂存了哪些行只是保存在本地了。</p><p><a href="stage-in-two-commits"></a></p><h2 id="我想把在一个文件里的变化-changes-加到两个提交-commit-里"><a href="#我想把在一个文件里的变化-changes-加到两个提交-commit-里" class="headerlink" title="我想把在一个文件里的变化(changes)加到两个提交(commit)里"></a>我想把在一个文件里的变化(changes)加到两个提交(commit)里</h2><p><code>git add</code> 会把整个文件加入到一个提交. <code>git add -p</code> 允许交互式的选择你想要提交的部分.</p><p><a href="unstaging-edits-and-staging-the-unstaged"></a></p><h2 id="我想把暂存的内容变成未暂存，把未暂存的内容暂存起来"><a href="#我想把暂存的内容变成未暂存，把未暂存的内容暂存起来" class="headerlink" title="我想把暂存的内容变成未暂存，把未暂存的内容暂存起来"></a>我想把暂存的内容变成未暂存，把未暂存的内容暂存起来</h2><p>多数情况下，你应该将所有的内容变为未暂存，然后再选择你想要的内容进行commit。<br>但假定你就是想要这么做，这里你可以创建一个临时的commit来保存你已暂存的内容，然后暂存你的未暂存的内容并进行stash。然后reset最后一个commit将原本暂存的内容变为未暂存，最后stash pop回来。</p><pre class="line-numbers language-sh"><code class="language-sh">git commit -m "WIP"git add .git stashgit reset HEAD^git stash pop --index 0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意1: 这里使用<code>pop</code>仅仅是因为想尽可能保持幂等。<br>注意2: 假如你不加上<code>--index</code>你会把暂存的文件标记为为存储.这个<a href="https://stackoverflow.com/questions/31595873/git-stash-with-staged-files-does-stash-convert-staged-files-to-unstaged?answertab=active#tab-top" target="_blank" rel="noopener">链接</a> 解释得比较清楚。（不过是英文的，其大意是说，这是一个较为底层的问题，stash时会做2个commit，其中一个会记录index状态，staged的文件等东西，另一个记录worktree和其他的一些东西，如果你不在apply时加index，git会把两个一起销毁，所以staged里就空了）。</p><h1 id="未暂存-Unstaged-的内容"><a href="#未暂存-Unstaged-的内容" class="headerlink" title="未暂存(Unstaged)的内容"></a>未暂存(Unstaged)的内容</h1><p><a href="move-unstaged-edits-to-new-branch"></a></p><h2 id="我想把未暂存的内容移动到一个新分支"><a href="#我想把未暂存的内容移动到一个新分支" class="headerlink" title="我想把未暂存的内容移动到一个新分支"></a>我想把未暂存的内容移动到一个新分支</h2><pre class="line-numbers language-sh"><code class="language-sh">git checkout -b my-branch<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="move-unstaged-edits-to-old-branch"></a></p><h2 id="我想把未暂存的内容移动到另一个已存在的分支"><a href="#我想把未暂存的内容移动到另一个已存在的分支" class="headerlink" title="我想把未暂存的内容移动到另一个已存在的分支"></a>我想把未暂存的内容移动到另一个已存在的分支</h2><pre class="line-numbers language-sh"><code class="language-sh">git stashgit checkout my-branchgit stash pop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><a href="i-want-to-discard-my-local-uncommitted-changes"></a></p><h2 id="我想丢弃本地未提交的变化-uncommitted-changes"><a href="#我想丢弃本地未提交的变化-uncommitted-changes" class="headerlink" title="我想丢弃本地未提交的变化(uncommitted changes)"></a>我想丢弃本地未提交的变化(uncommitted changes)</h2><p>如果你只是想重置源(origin)和你本地(local)之间的一些提交(commit)，你可以：</p><pre class="line-numbers language-sh"><code class="language-sh"># one commitgit reset --hard HEAD^# two commitsgit reset --hard HEAD^^# four commitsgit reset --hard HEAD~4# orgit checkout -f<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>重置某个特殊的文件, 你可以用文件名做为参数:</p><pre class="line-numbers language-sh"><code class="language-sh">git reset filename<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="i-want-to-discard-specific-unstaged-changes"></a></p><h2 id="我想丢弃某些未暂存的内容"><a href="#我想丢弃某些未暂存的内容" class="headerlink" title="我想丢弃某些未暂存的内容"></a>我想丢弃某些未暂存的内容</h2><p>如果你想丢弃工作拷贝中的一部分内容，而不是全部。</p><p>签出(checkout)不需要的内容，保留需要的。</p><pre class="line-numbers language-sh"><code class="language-sh">git checkout -p# Answer y to all of the snippets you want to drop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>另外一个方法是使用 <code>stash</code>， Stash所有要保留下的内容, 重置工作拷贝, 重新应用保留的部分。</p><pre class="line-numbers language-sh"><code class="language-sh">git stash -p# Select all of the snippets you want to savegit reset --hardgit stash pop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>或者, stash 你不需要的部分, 然后stash drop。</p><pre class="line-numbers language-sh"><code class="language-sh">git stash -p# Select all of the snippets you don't want to savegit stash drop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="分支-Branches"><a href="#分支-Branches" class="headerlink" title="分支(Branches)"></a>分支(Branches)</h1><p><a name="pull-wrong-branch"></a></p><h2 id="我从错误的分支拉取了内容，或把内容拉取到了错误的分支"><a href="#我从错误的分支拉取了内容，或把内容拉取到了错误的分支" class="headerlink" title="我从错误的分支拉取了内容，或把内容拉取到了错误的分支"></a>我从错误的分支拉取了内容，或把内容拉取到了错误的分支</h2><p>这是另外一种使用 <code>git reflog</code> 情况，找到在这次错误拉(pull) 之前HEAD的指向。</p><pre class="line-numbers language-sh"><code class="language-sh">git reflogab7555f HEAD@{0}: pull origin wrong-branch: Fast-forwardc5bc55a HEAD@{1}: checkout: checkout message goes here<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>重置分支到你所需的提交(desired commit):</p><pre class="line-numbers language-sh"><code class="language-sh">git reset --hard c5bc55a<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>完成。</p><p><a href="discard-local-commits"></a></p><h2 id="我想扔掉本地的提交-commit-，以便我的分支与远程的保持一致"><a href="#我想扔掉本地的提交-commit-，以便我的分支与远程的保持一致" class="headerlink" title="我想扔掉本地的提交(commit)，以便我的分支与远程的保持一致"></a>我想扔掉本地的提交(commit)，以便我的分支与远程的保持一致</h2><p>先确认你没有推(push)你的内容到远程。</p><p><code>git status</code> 会显示你领先(ahead)源(origin)多少个提交:</p><pre class="line-numbers language-sh"><code class="language-sh">git status# On branch my-branch# Your branch is ahead of 'origin/my-branch' by 2 commits.#   (use "git push" to publish your local commits)#<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>一种方法是:</p><pre class="line-numbers language-sh"><code class="language-sh">git reset --hard origin/my-branch<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a name="commit-wrong-branch"></a></p><h2 id="我需要提交到一个新分支，但错误的提交到了master"><a href="#我需要提交到一个新分支，但错误的提交到了master" class="headerlink" title="我需要提交到一个新分支，但错误的提交到了master"></a>我需要提交到一个新分支，但错误的提交到了master</h2><p>在master下创建一个新分支，不切换到新分支,仍在master下:</p><pre class="line-numbers language-sh"><code class="language-sh">git branch my-branch<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>把master分支重置到前一个提交:</p><pre class="line-numbers language-sh"><code class="language-sh">git reset --hard HEAD^<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>HEAD^</code> 是 <code>HEAD^1</code> 的简写，你可以通过指定要设置的<code>HEAD</code>来进一步重置。</p><p>或者, 如果你不想使用 <code>HEAD^</code>, 找到你想重置到的提交(commit)的hash(<code>git log</code> 能够完成)， 然后重置到这个hash。 使用<code>git push</code> 同步内容到远程。</p><p>例如, master分支想重置到的提交的hash为<code>a13b85e</code>:</p><pre class="line-numbers language-sh"><code class="language-sh">git reset --hard a13b85eHEAD is now at a13b85e<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>签出(checkout)刚才新建的分支继续工作:</p><pre class="line-numbers language-sh"><code class="language-sh">git checkout my-branch<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a name="keep-whole-file"></a></p><h2 id="我想保留来自另外一个ref-ish的整个文件"><a href="#我想保留来自另外一个ref-ish的整个文件" class="headerlink" title="我想保留来自另外一个ref-ish的整个文件"></a>我想保留来自另外一个ref-ish的整个文件</h2><p>假设你正在做一个原型方案(原文为working spike (see note)), 有成百的内容，每个都工作得很好。现在, 你提交到了一个分支，保存工作内容:</p><pre class="line-numbers language-sh"><code class="language-sh">(solution)git add -A && git commit -m "Adding all changes from this spike into one big commit."<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>当你想要把它放到一个分支里 (可能是<code>feature</code>, 或者 <code>develop</code>), 你关心是保持整个文件的完整，你想要一个大的提交分隔成比较小。</p><p>假设你有:</p><ul><li>分支 <code>solution</code>, 拥有原型方案， 领先 <code>develop</code> 分支。</li><li>分支 <code>develop</code>, 在这里你应用原型方案的一些内容。</li></ul><p>我去可以通过把内容拿到你的分支里，来解决这个问题:</p><pre class="line-numbers language-sh"><code class="language-sh">(develop)git checkout solution -- file1.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这会把这个文件内容从分支 <code>solution</code> 拿到分支 <code>develop</code> 里来:</p><pre class="line-numbers language-sh"><code class="language-sh"># On branch develop# Your branch is up-to-date with 'origin/develop'.# Changes to be committed:#  (use "git reset HEAD <file>..." to unstage)##        modified:   file1.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后, 正常提交。</p><p>Note: Spike solutions are made to analyze or solve the problem. These solutions are used for estimation and discarded once everyone gets clear visualization of the problem. ~ <a href="https://en.wikipedia.org/wiki/Extreme_programming_practices" target="_blank" rel="noopener">Wikipedia</a>.</p><p><a name="cherry-pick"></a></p><h2 id="我把几个提交-commit-提交到了同一个分支，而这些提交应该分布在不同的分支里"><a href="#我把几个提交-commit-提交到了同一个分支，而这些提交应该分布在不同的分支里" class="headerlink" title="我把几个提交(commit)提交到了同一个分支，而这些提交应该分布在不同的分支里"></a>我把几个提交(commit)提交到了同一个分支，而这些提交应该分布在不同的分支里</h2><p>假设你有一个<code>master</code>分支， 执行<code>git log</code>, 你看到你做过两次提交:</p><pre class="line-numbers language-sh"><code class="language-sh">git logcommit e3851e817c451cc36f2e6f3049db528415e3c114Author: Alex Lee <alexlee@example.com>Date:   Tue Jul 22 15:39:27 2014 -0400    Bug #21 - Added CSRF protectioncommit 5ea51731d150f7ddc4a365437931cd8be3bf3131Author: Alex Lee <alexlee@example.com>Date:   Tue Jul 22 15:39:12 2014 -0400    Bug #14 - Fixed spacing on titlecommit a13b85e984171c6e2a1729bb061994525f626d14Author: Aki Rose <akirose@example.com>Date:   Tue Jul 21 01:12:48 2014 -0400    First commit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>让我们用提交hash(commit hash)标记bug (<code>e3851e8</code> for #21, <code>5ea5173</code> for #14).</p><p>首先, 我们把<code>master</code>分支重置到正确的提交(<code>a13b85e</code>):</p><pre class="line-numbers language-sh"><code class="language-sh">git reset --hard a13b85eHEAD is now at a13b85e<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>现在, 我们对 bug #21 创建一个新的分支:</p><pre class="line-numbers language-sh"><code class="language-sh">git checkout -b 21$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>接着, 我们用 <em>cherry-pick</em> 把对bug #21的提交放入当前分支。 这意味着我们将应用(apply)这个提交(commit)，仅仅这一个提交(commit)，直接在HEAD上面。</p><pre class="line-numbers language-sh"><code class="language-sh">git cherry-pick e3851e8<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这时候, 这里可能会产生冲突， 参见<a href="#interactive-rebase">交互式 rebasing 章</a> <a href="#merge-conflict"><strong>冲突节</strong></a> 解决冲突.</p><p>再者， 我们为bug #14 创建一个新的分支, 也基于<code>master</code>分支</p><pre class="line-numbers language-sh"><code class="language-sh">git checkout mastergit checkout -b 14$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>最后, 为 bug #14 执行 <code>cherry-pick</code>:</p><pre class="line-numbers language-sh"><code class="language-sh">git cherry-pick 5ea5173<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a name="delete-stale-local-branches"></a></p><h2 id="我想删除上游-upstream-分支被删除了的本地分支"><a href="#我想删除上游-upstream-分支被删除了的本地分支" class="headerlink" title="我想删除上游(upstream)分支被删除了的本地分支"></a>我想删除上游(upstream)分支被删除了的本地分支</h2><p>一旦你在github 上面合并(merge)了一个pull request, 你就可以删除你fork里被合并的分支。 如果你不准备继续在这个分支里工作, 删除这个分支的本地拷贝会更干净，使你不会陷入工作分支和一堆陈旧分支的混乱之中。</p><pre class="line-numbers language-sh"><code class="language-sh">git fetch -p<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a name="restore-a-deleted-branch"></a></p><h2 id="我不小心删除了我的分支"><a href="#我不小心删除了我的分支" class="headerlink" title="我不小心删除了我的分支"></a>我不小心删除了我的分支</h2><p>如果你定期推送到远程, 多数情况下应该是安全的，但有些时候还是可能删除了还没有推到远程的分支。 让我们先创建一个分支和一个新的文件:</p><pre class="line-numbers language-sh"><code class="language-sh">git checkout -b my-branchgit branchtouch foo.txtlsREADME.md foo.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>添加文件并做一次提交</p><pre class="line-numbers language-sh"><code class="language-sh">git add .git commit -m 'foo.txt added'foo.txt added 1 files changed, 1 insertions(+) create mode 100644 foo.txtgit logcommit 4e3cd85a670ced7cc17a2b5d8d3d809ac88d5012Author: siemiatj <siemiatj@example.com>Date:   Wed Jul 30 00:34:10 2014 +0200    foo.txt addedcommit 69204cdf0acbab201619d95ad8295928e7f411d5Author: Kate Hudson <katehudson@example.com>Date:   Tue Jul 29 13:14:46 2014 -0400    Fixes #6: Force pushing after amending commits<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>现在我们切回到主(master)分支，‘不小心的’删除<code>my-branch</code>分支</p><pre class="line-numbers language-sh"><code class="language-sh">git checkout masterSwitched to branch 'master'Your branch is up-to-date with 'origin/master'.git branch -D my-branchDeleted branch my-branch (was 4e3cd85).echo oh noes, deleted my branch!oh noes, deleted my branch!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这时候你应该想起了<code>reflog</code>, 一个升级版的日志，它存储了仓库(repo)里面所有动作的历史。</p><pre><code>git reflog69204cd HEAD@{0}: checkout: moving from my-branch to master4e3cd85 HEAD@{1}: commit: foo.txt added69204cd HEAD@{2}: checkout: moving from master to my-branch</code></pre><p>正如你所见，我们有一个来自删除分支的提交hash(commit hash)，接下来看看是否能恢复删除了的分支。</p><pre class="line-numbers language-sh"><code class="language-sh">git checkout -b my-branch-helpSwitched to a new branch 'my-branch-help'git reset --hard 4e3cd85HEAD is now at 4e3cd85 foo.txt addedlsREADME.md foo.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>看! 我们把删除的文件找回来了。 Git的 <code>reflog</code> 在rebasing出错的时候也是同样有用的。</p><p><a name="i-want-to-delete-a-branch"></a></p><h2 id="我想删除一个分支"><a href="#我想删除一个分支" class="headerlink" title="我想删除一个分支"></a>我想删除一个分支</h2><p>删除一个远程分支:</p><pre class="line-numbers language-sh"><code class="language-sh">git push origin --delete my-branch<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>你也可以:</p><pre class="line-numbers language-sh"><code class="language-sh">git push origin :my-branch<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>删除一个本地分支:</p><pre class="line-numbers language-sh"><code class="language-sh">git branch -D my-branch<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a name="i-want-to-checkout-to-a-remote-branch-that-someone-else-is-working-on"></a></p><h2 id="我想从别人正在工作的远程分支签出-checkout-一个分支"><a href="#我想从别人正在工作的远程分支签出-checkout-一个分支" class="headerlink" title="我想从别人正在工作的远程分支签出(checkout)一个分支"></a>我想从别人正在工作的远程分支签出(checkout)一个分支</h2><p>首先, 从远程拉取(fetch) 所有分支:</p><pre class="line-numbers language-sh"><code class="language-sh">git fetch --all<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>假设你想要从远程的<code>daves</code>分支签出到本地的<code>daves</code></p><pre class="line-numbers language-sh"><code class="language-sh">git checkout --track origin/davesBranch daves set up to track remote branch daves from origin.Switched to a new branch 'daves'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>(<code>--track</code> 是 <code>git checkout -b [branch] [remotename]/[branch]</code> 的简写)</p><p>这样就得到了一个<code>daves</code>分支的本地拷贝, 任何推过(pushed)的更新，远程都能看到.</p><h1 id="Rebasing-和合并-Merging"><a href="#Rebasing-和合并-Merging" class="headerlink" title="Rebasing 和合并(Merging)"></a>Rebasing 和合并(Merging)</h1><p><a name="undo-rebase"></a></p><h2 id="我想撤销rebase-merge"><a href="#我想撤销rebase-merge" class="headerlink" title="我想撤销rebase/merge"></a>我想撤销rebase/merge</h2><p>你可以合并(merge)或rebase了一个错误的分支, 或者完成不了一个进行中的rebase/merge。 Git 在进行危险操作的时候会把原始的HEAD保存在一个叫ORIG_HEAD的变量里, 所以要把分支恢复到rebase/merge前的状态是很容易的。</p><pre class="line-numbers language-sh"><code class="language-sh">git reset --hard ORIG_HEAD<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a name="force-push-rebase"></a></p><h2 id="我已经rebase过-但是我不想强推-force-push"><a href="#我已经rebase过-但是我不想强推-force-push" class="headerlink" title="我已经rebase过, 但是我不想强推(force push)"></a>我已经rebase过, 但是我不想强推(force push)</h2><p>不幸的是，如果你想把这些变化(changes)反应到远程分支上，你就必须得强推(force push)。 是因你快进(Fast forward)了提交，改变了Git历史, 远程分支不会接受变化(changes)，除非强推(force push)。这就是许多人使用 merge 工作流, 而不是 rebasing 工作流的主要原因之一， 开发者的强推(force push)会使大的团队陷入麻烦。使用时需要注意，一种安全使用 rebase 的方法是，不要把你的变化(changes)反映到远程分支上, 而是按下面的做:</p><pre class="line-numbers language-sh"><code class="language-sh">git checkout my-branchgit rebase -i mastergit checkout mastergit merge --ff-only my-branch<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>更多, 参见 <a href="http://stackoverflow.com/questions/11058312/how-can-i-use-git-rebase-without-requiring-a-forced-push" target="_blank" rel="noopener">this SO thread</a>.</p><p><a name="interactive-rebase"></a></p><h2 id="我需要组合-combine-几个提交-commit"><a href="#我需要组合-combine-几个提交-commit" class="headerlink" title="我需要组合(combine)几个提交(commit)"></a>我需要组合(combine)几个提交(commit)</h2><p>假设你的工作分支将会做对于 <code>master</code> 的pull-request。 一般情况下你不关心提交(commit)的时间戳，只想组合 <em>所有</em> 提交(commit) 到一个单独的里面, 然后重置(reset)重提交(recommit)。 确保主(master)分支是最新的和你的变化都已经提交了, 然后:</p><pre class="line-numbers language-sh"><code class="language-sh">git reset --soft mastergit commit -am "New awesome feature"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>如果你想要更多的控制, 想要保留时间戳, 你需要做交互式rebase (interactive rebase):</p><pre class="line-numbers language-sh"><code class="language-sh">git rebase -i master<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果没有相对的其它分支， 你将不得不相对自己的<code>HEAD</code> 进行 rebase。 例如：你想组合最近的两次提交(commit), 你将相对于<code>HEAD~2</code> 进行rebase， 组合最近3次提交(commit), 相对于<code>HEAD~3</code>, 等等。</p><pre class="line-numbers language-sh"><code class="language-sh">git rebase -i HEAD~2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在你执行了交互式 rebase的命令(interactive rebase command)后, 你将在你的编辑器里看到类似下面的内容:</p><pre class="line-numbers language-vim"><code class="language-vim">pick a9c8a1d Some refactoringpick 01b2fd8 New awesome featurepick b729ad5 fixuppick e3851e8 another <span class="token keyword">fix</span># Rebase 8074d12<span class="token operator">.</span><span class="token operator">.</span>b729ad5 onto 8074d12## Commands<span class="token punctuation">:</span>#  <span class="token keyword">p</span><span class="token punctuation">,</span> pick <span class="token operator">=</span> use commit#  <span class="token keyword">r</span><span class="token punctuation">,</span> reword <span class="token operator">=</span> use commit<span class="token punctuation">,</span> but <span class="token keyword">edit</span> the commit message#  <span class="token keyword">e</span><span class="token punctuation">,</span> <span class="token keyword">edit</span> <span class="token operator">=</span> use commit<span class="token punctuation">,</span> but <span class="token keyword">stop</span> <span class="token keyword">for</span> amending#  s<span class="token punctuation">,</span> squash <span class="token operator">=</span> use commit<span class="token punctuation">,</span> but meld into <span class="token keyword">previous</span> commit#  <span class="token keyword">f</span><span class="token punctuation">,</span> fixup <span class="token operator">=</span> like <span class="token string">"squash"</span><span class="token punctuation">,</span> but discard this commit's log message#  <span class="token keyword">x</span><span class="token punctuation">,</span> exec <span class="token operator">=</span> run command <span class="token punctuation">(</span>the rest of the line<span class="token punctuation">)</span> using <span class="token keyword">shell</span>## These <span class="token builtin">lines</span> can <span class="token keyword">be</span> re<span class="token operator">-</span>ordered<span class="token punctuation">;</span> they are executed from <span class="token builtin">top</span> <span class="token keyword">to</span> bottom<span class="token operator">.</span>## If you remove a line here THAT COMMIT WILL BE LOST<span class="token operator">.</span>## However<span class="token punctuation">,</span> <span class="token keyword">if</span> you remove everything<span class="token punctuation">,</span> the rebase will <span class="token keyword">be</span> aborted<span class="token operator">.</span>## Note that empty commits are commented out<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>所有以 <code>#</code> 开头的行都是注释, 不会影响 rebase.</p><p>然后，你可以用任何上面命令列表的命令替换 <code>pick</code>, 你也可以通过删除对应的行来删除一个提交(commit)。</p><p>例如, 如果你想 <strong>单独保留最旧(first)的提交(commit),组合所有剩下的到第二个里面</strong>, 你就应该编辑第二个提交(commit)后面的每个提交(commit) 前的单词为 <code>f</code>:</p><pre class="line-numbers language-vim"><code class="language-vim">pick a9c8a1d Some refactoringpick 01b2fd8 New awesome feature<span class="token keyword">f</span> b729ad5 fixup<span class="token keyword">f</span> e3851e8 another <span class="token keyword">fix</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>如果你想组合这些提交(commit) <strong>并重命名这个提交(commit)</strong>, 你应该在第二个提交(commit)旁边添加一个<code>r</code>，或者更简单的用<code>s</code> 替代 <code>f</code>:</p><pre class="line-numbers language-vim"><code class="language-vim">pick a9c8a1d Some refactoringpick 01b2fd8 New awesome features b729ad5 fixups e3851e8 another <span class="token keyword">fix</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>你可以在接下来弹出的文本提示框里重命名提交(commit)。</p><pre class="line-numbers language-vim"><code class="language-vim">Newer<span class="token punctuation">,</span> awesomer features# Please enter the commit message <span class="token keyword">for</span> your <span class="token keyword">changes</span><span class="token operator">.</span> Lines starting# with <span class="token string">'#'</span> will <span class="token keyword">be</span> ignored<span class="token punctuation">,</span> and an empty message aborts the commit<span class="token operator">.</span># rebase <span class="token keyword">in</span> progress<span class="token punctuation">;</span> onto 8074d12# You are currently editing a commit <span class="token keyword">while</span> rebasing branch <span class="token string">'master'</span> <span class="token keyword">on</span> <span class="token string">'8074d12'</span><span class="token operator">.</span>## Changes <span class="token keyword">to</span> <span class="token keyword">be</span> committed<span class="token punctuation">:</span>#    <span class="token builtin">modified</span><span class="token punctuation">:</span>   README<span class="token operator">.</span>md#<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果成功了, 你应该看到类似下面的内容:</p><pre class="line-numbers language-sh"><code class="language-sh">Successfully rebased and updated refs/heads/master.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="安全合并-merging-策略"><a href="#安全合并-merging-策略" class="headerlink" title="安全合并(merging)策略"></a>安全合并(merging)策略</h3><p><code>--no-commit</code> 执行合并(merge)但不自动提交, 给用户在做提交前检查和修改的机会。 <code>no-ff</code> 会为特性分支(feature branch)的存在过留下证据, 保持项目历史一致。</p><pre class="line-numbers language-sh"><code class="language-sh">git merge --no-ff --no-commit my-branch<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="我需要将一个分支合并成一个提交-commit"><a href="#我需要将一个分支合并成一个提交-commit" class="headerlink" title="我需要将一个分支合并成一个提交(commit)"></a>我需要将一个分支合并成一个提交(commit)</h3><pre class="line-numbers language-sh"><code class="language-sh">git merge --squash my-branch<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a name="rebase-unpushed-commits"></a></p><h3 id="我只想组合-combine-未推的提交-unpushed-commit"><a href="#我只想组合-combine-未推的提交-unpushed-commit" class="headerlink" title="我只想组合(combine)未推的提交(unpushed commit)"></a>我只想组合(combine)未推的提交(unpushed commit)</h3><p>有时候，在将数据推向上游之前，你有几个正在进行的工作提交(commit)。这时候不希望把已经推(push)过的组合进来，因为其他人可能已经有提交(commit)引用它们了。</p><pre class="line-numbers language-sh"><code class="language-sh">git rebase -i @{u}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这会产生一次交互式的rebase(interactive rebase), 只会列出没有推(push)的提交(commit)， 在这个列表时进行reorder/fix/squash 都是安全的。</p><p><a name="check-if-all-commits-on-a-branch-are-merged"></a></p><h2 id="检查是否分支上的所有提交-commit-都合并-merge-过了"><a href="#检查是否分支上的所有提交-commit-都合并-merge-过了" class="headerlink" title="检查是否分支上的所有提交(commit)都合并(merge)过了"></a>检查是否分支上的所有提交(commit)都合并(merge)过了</h2><p>检查一个分支上的所有提交(commit)是否都已经合并(merge)到了其它分支, 你应该在这些分支的head(或任何 commits)之间做一次diff:</p><pre class="line-numbers language-sh"><code class="language-sh">git log --graph --left-right --cherry-pick --oneline HEAD...feature/120-on-scroll<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这会告诉你在一个分支里有而另一个分支没有的所有提交(commit), 和分支之间不共享的提交(commit)的列表。 另一个做法可以是:</p><pre class="line-numbers language-sh"><code class="language-sh">git log master ^feature/120-on-scroll --no-merges<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="交互式rebase-interactive-rebase-可能出现的问题"><a href="#交互式rebase-interactive-rebase-可能出现的问题" class="headerlink" title="交互式rebase(interactive rebase)可能出现的问题"></a>交互式rebase(interactive rebase)可能出现的问题</h2><p><a name="noop"></a></p><h3 id="这个rebase-编辑屏幕出现’noop’"><a href="#这个rebase-编辑屏幕出现’noop’" class="headerlink" title="这个rebase 编辑屏幕出现’noop’"></a>这个rebase 编辑屏幕出现’noop’</h3><p>如果你看到的是这样:</p><pre><code>noop</code></pre><p>这意味着你rebase的分支和当前分支在同一个提交(commit)上, 或者 <em>领先(ahead)</em> 当前分支。 你可以尝试:</p><ul><li>检查确保主(master)分支没有问题</li><li>rebase  <code>HEAD~2</code> 或者更早</li></ul><p><a name="merge-conflict"></a></p><h3 id="有冲突的情况"><a href="#有冲突的情况" class="headerlink" title="有冲突的情况"></a>有冲突的情况</h3><p>如果你不能成功的完成rebase, 你可能必须要解决冲突。</p><p>首先执行 <code>git status</code> 找出哪些文件有冲突:</p><pre class="line-numbers language-sh"><code class="language-sh">git statusOn branch my-branchChanges not staged for commit:  (use "git add <file>..." to update what will be committed)  (use "git checkout -- <file>..." to discard changes in working directory)    modified:   README.md<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子里面, <code>README.md</code> 有冲突。 打开这个文件找到类似下面的内容:</p><pre class="line-numbers language-vim"><code class="language-vim">   <span class="token operator">&lt;</span><span class="token operator">&lt;</span><span class="token operator">&lt;</span><span class="token operator">&lt;</span><span class="token operator">&lt;</span><span class="token operator">&lt;</span><span class="token operator">&lt;</span> HEAD   some code   <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>   some code   <span class="token operator">></span><span class="token operator">></span><span class="token operator">></span><span class="token operator">></span><span class="token operator">></span><span class="token operator">></span><span class="token operator">></span> <span class="token keyword">new</span><span class="token operator">-</span>commit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>你需要解决新提交的代码(示例里, 从中间<code>==</code>线到<code>new-commit</code>的地方)与<code>HEAD</code> 之间不一样的地方.</p><p>有时候这些合并非常复杂，你应该使用可视化的差异编辑器(visual diff editor):</p><pre class="line-numbers language-sh"><code class="language-sh">git mergetool -t opendiff<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在你解决完所有冲突和测试过后, <code>git add</code> 变化了的(changed)文件, 然后用<code>git rebase --continue</code> 继续rebase。</p><pre class="line-numbers language-sh"><code class="language-sh">git add README.mdgit rebase --continue<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>如果在解决完所有的冲突过后，得到了与提交前一样的结果, 可以执行<code>git rebase --skip</code>。</p><p>任何时候你想结束整个rebase 过程，回来rebase前的分支状态, 你可以做:</p><pre class="line-numbers language-sh"><code class="language-sh">git rebase --abort<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a name="stashing"></a></p><h1 id="Stash"><a href="#Stash" class="headerlink" title="Stash"></a>Stash</h1><h2 id="暂存所有改动"><a href="#暂存所有改动" class="headerlink" title="暂存所有改动"></a>暂存所有改动</h2><p>暂存你工作目录下的所有改动</p><pre class="line-numbers language-sh"><code class="language-sh">git stash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>你可以使用<code>-u</code>来排除一些文件</p><pre class="line-numbers language-sh"><code class="language-sh">git stash -u<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="暂存指定文件"><a href="#暂存指定文件" class="headerlink" title="暂存指定文件"></a>暂存指定文件</h2><p>假设你只想暂存某一个文件</p><pre class="line-numbers language-sh"><code class="language-sh">git stash push working-directory-path/filename.ext<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>假设你想暂存多个文件</p><pre class="line-numbers language-sh"><code class="language-sh">git stash push working-directory-path/filename1.ext working-directory-path/filename2.ext<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a name="stash-msg"></a></p><h2 id="暂存时记录消息"><a href="#暂存时记录消息" class="headerlink" title="暂存时记录消息"></a>暂存时记录消息</h2><p>这样你可以在<code>list</code>时看到它</p><pre class="line-numbers language-sh"><code class="language-sh">git stash save <message><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或</p><pre class="line-numbers language-sh"><code class="language-sh">git stash push -m <message><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a name="stash-apply-specific"></a></p><h2 id="使用某个指定暂存"><a href="#使用某个指定暂存" class="headerlink" title="使用某个指定暂存"></a>使用某个指定暂存</h2><p>首先你可以查看你的<code>stash</code>记录</p><pre class="line-numbers language-sh"><code class="language-sh">git stash list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后你可以<code>apply</code>某个<code>stash</code></p><pre class="line-numbers language-sh"><code class="language-sh">git stash apply "stash@{n}"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>此处， ‘n’是<code>stash</code>在栈中的位置，最上层的<code>stash</code>会是0</p><p>除此之外，也可以使用时间标记(假如你能记得的话)。</p><pre class="line-numbers language-sh"><code class="language-sh">git stash apply "stash@{2.hours.ago}"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="stage-and-keep-unstaged"></a></p><h2 id="暂存时保留未暂存的内容"><a href="#暂存时保留未暂存的内容" class="headerlink" title="暂存时保留未暂存的内容"></a>暂存时保留未暂存的内容</h2><p>你需要手动create一个<code>stash commit</code>， 然后使用<code>git stash store</code>。</p><pre class="line-numbers language-sh"><code class="language-sh">git stash creategit stash store -m "commit-message" CREATED_SHA1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><a name="miscellaneous-objects"></a></p><h1 id="杂项-Miscellaneous-Objects"><a href="#杂项-Miscellaneous-Objects" class="headerlink" title="杂项(Miscellaneous Objects)"></a>杂项(Miscellaneous Objects)</h1><p><a name="clone-submodules"></a></p><h2 id="克隆所有子模块"><a href="#克隆所有子模块" class="headerlink" title="克隆所有子模块"></a>克隆所有子模块</h2><pre class="line-numbers language-sh"><code class="language-sh">git clone --recursive git://github.com/foo/bar.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果已经克隆了:</p><pre class="line-numbers language-sh"><code class="language-sh">git submodule update --init --recursive<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a name="delete-tag"></a></p><h2 id="删除标签-tag"><a href="#删除标签-tag" class="headerlink" title="删除标签(tag)"></a>删除标签(tag)</h2><pre class="line-numbers language-sh"><code class="language-sh">git tag -d <tag_name>git push <remote> :refs/tags/<tag_name><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><a name="recover-tag"></a></p><h2 id="恢复已删除标签-tag"><a href="#恢复已删除标签-tag" class="headerlink" title="恢复已删除标签(tag)"></a>恢复已删除标签(tag)</h2><p>如果你想恢复一个已删除标签(tag), 可以按照下面的步骤: 首先, 需要找到无法访问的标签(unreachable tag):</p><pre class="line-numbers language-sh"><code class="language-sh">git fsck --unreachable | grep tag<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>记下这个标签(tag)的hash，然后用Git的 <a href="http://git-scm.com/docs/git-update-ref" target="_blank" rel="noopener">update-ref</a>:</p><pre class="line-numbers language-sh"><code class="language-sh">git update-ref refs/tags/<tag_name> <hash><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这时你的标签(tag)应该已经恢复了。</p><p><a name="deleted-patch"></a></p><h2 id="已删除补丁-patch"><a href="#已删除补丁-patch" class="headerlink" title="已删除补丁(patch)"></a>已删除补丁(patch)</h2><p>如果某人在 GitHub 上给你发了一个pull request, 但是然后他删除了他自己的原始 fork, 你将没法克隆他们的提交(commit)或使用 <code>git am</code>。在这种情况下, 最好手动的查看他们的提交(commit)，并把它们拷贝到一个本地新分支，然后做提交。</p><p>做完提交后, 再修改作者，参见<a href="#commit-wrong-author">变更作者</a>。 然后, 应用变化, 再发起一个新的pull request。</p><h1 id="跟踪文件-Tracking-Files"><a href="#跟踪文件-Tracking-Files" class="headerlink" title="跟踪文件(Tracking Files)"></a>跟踪文件(Tracking Files)</h1><p><a href="i-want-to-change-a-file-names-capitalization-without-changing-the-contents-of-the-file"></a></p><h2 id="我只想改变一个文件名字的大小写，而不修改内容"><a href="#我只想改变一个文件名字的大小写，而不修改内容" class="headerlink" title="我只想改变一个文件名字的大小写，而不修改内容"></a>我只想改变一个文件名字的大小写，而不修改内容</h2><pre class="line-numbers language-sh"><code class="language-sh">git mv --force myfile MyFile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="remove-from-git"></a></p><h2 id="我想从Git删除一个文件，但保留该文件"><a href="#我想从Git删除一个文件，但保留该文件" class="headerlink" title="我想从Git删除一个文件，但保留该文件"></a>我想从Git删除一个文件，但保留该文件</h2><pre class="line-numbers language-sh"><code class="language-sh">git rm --cached log.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="配置-Configuration"><a href="#配置-Configuration" class="headerlink" title="配置(Configuration)"></a>配置(Configuration)</h1><p><a name="adding-command-aliases"></a></p><h2 id="我想给一些Git命令添加别名-alias"><a href="#我想给一些Git命令添加别名-alias" class="headerlink" title="我想给一些Git命令添加别名(alias)"></a>我想给一些Git命令添加别名(alias)</h2><p>在 OS X 和 Linux 下, 你的 Git的配置文件储存在 <code>~/.gitconfig</code>。我在<code>[alias]</code> 部分添加了一些快捷别名(和一些我容易拼写错误的)，如下:</p><pre class="line-numbers language-vim"><code class="language-vim"><span class="token punctuation">[</span>alias<span class="token punctuation">]</span>    a <span class="token operator">=</span> add    amend <span class="token operator">=</span> commit <span class="token operator">-</span><span class="token operator">-</span>amend    <span class="token keyword">c</span> <span class="token operator">=</span> commit    <span class="token keyword">ca</span> <span class="token operator">=</span> commit <span class="token operator">-</span><span class="token operator">-</span>amend    <span class="token builtin">ci</span> <span class="token operator">=</span> commit <span class="token operator">-</span>a    <span class="token keyword">co</span> <span class="token operator">=</span> checkout    <span class="token keyword">d</span> <span class="token operator">=</span> <span class="token builtin">diff</span>    dc <span class="token operator">=</span> <span class="token builtin">diff</span> <span class="token operator">-</span><span class="token operator">-</span>changed    <span class="token keyword">ds</span> <span class="token operator">=</span> <span class="token builtin">diff</span> <span class="token operator">-</span><span class="token operator">-</span>staged    <span class="token keyword">f</span> <span class="token operator">=</span> fetch    loll <span class="token operator">=</span> log <span class="token operator">-</span><span class="token operator">-</span>graph <span class="token operator">-</span><span class="token operator">-</span>decorate <span class="token operator">-</span><span class="token operator">-</span>pretty<span class="token operator">=</span>oneline <span class="token operator">-</span><span class="token operator">-</span>abbrev<span class="token operator">-</span>commit    <span class="token keyword">m</span> <span class="token operator">=</span> merge    one <span class="token operator">=</span> log <span class="token operator">-</span><span class="token operator">-</span>pretty<span class="token operator">=</span>oneline    outstanding <span class="token operator">=</span> rebase <span class="token operator">-</span>i @<span class="token punctuation">{</span><span class="token keyword">u</span><span class="token punctuation">}</span>    s <span class="token operator">=</span> status    unpushed <span class="token operator">=</span> log @<span class="token punctuation">{</span><span class="token keyword">u</span><span class="token punctuation">}</span>    <span class="token builtin">wc</span> <span class="token operator">=</span> whatchanged    wip <span class="token operator">=</span> rebase <span class="token operator">-</span>i @<span class="token punctuation">{</span><span class="token keyword">u</span><span class="token punctuation">}</span>    zap <span class="token operator">=</span> fetch <span class="token operator">-</span><span class="token keyword">p</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a name="credential-helper"></a></p><h2 id="我想缓存一个仓库-repository-的用户名和密码"><a href="#我想缓存一个仓库-repository-的用户名和密码" class="headerlink" title="我想缓存一个仓库(repository)的用户名和密码"></a>我想缓存一个仓库(repository)的用户名和密码</h2><p>你可能有一个仓库需要授权，这时你可以缓存用户名和密码，而不用每次推/拉(push/pull)的时候都输入，Credential helper能帮你。</p><pre class="line-numbers language-sh"><code class="language-sh">git config --global credential.helper cache# Set git to use the credential memory cache<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-sh"><code class="language-sh">git config --global credential.helper 'cache --timeout=3600'# Set the cache to timeout after 1 hour (setting is in seconds)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="git-diff"><a href="#git-diff" class="headerlink" title="git diff"></a>git diff</h1><blockquote><p>git diff【git diff 需要两个参数，永远是后者相对于前者的差异，不给显式参数则默认】<br>从大的方面来讲，有两个作用：</p></blockquote><h2 id="比较本地仓库的差异"><a href="#比较本地仓库的差异" class="headerlink" title="比较本地仓库的差异"></a>比较本地仓库的差异</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 1. 比较本地 未 add 的差异：</span><span class="token function">git</span> <span class="token function">diff</span> head~1 head~0<span class="token comment" spellcheck="true"># 1.1 可以具体比较某一个文件：</span><span class="token function">git</span> <span class="token function">diff</span> head~1 head~0 src/java/test.java<span class="token comment" spellcheck="true"># 1.2 可以只看差异的文件名：</span><span class="token function">git</span> <span class="token function">diff</span> head~1 head~0 --name-only<span class="token comment" spellcheck="true"># 1.3 比较本地 已经 add 但是没有 commit 的差异：</span><span class="token function">git</span> <span class="token function">diff</span> --cached head~1 head~0<span class="token comment" spellcheck="true"># 2. 可以具体比较某一个文件：</span><span class="token function">git</span> <span class="token function">diff</span> --cached head~1 head~0 src/java/test.java<span class="token comment" spellcheck="true"># 2.1 可以只看差异的文件名：</span><span class="token function">git</span> <span class="token function">diff</span> --cached head~1 head~0 --name-only<span class="token comment" spellcheck="true"># 3. 比较本地 已经 commit 但是还没有 push 到远端 的差异：</span><span class="token function">git</span> <span class="token function">diff</span> master origin/master<span class="token comment" spellcheck="true"># 3.1 比较本地最后一次提交的版本与m次之前提交的版本之间的差异：</span><span class="token function">git</span> <span class="token function">diff</span> head~m <span class="token function">head</span><span class="token comment" spellcheck="true"># 3.2可以只看差异的文件名：</span><span class="token function">git</span> <span class="token function">diff</span> head~m <span class="token function">head</span> --name-only<span class="token comment" spellcheck="true"># 3.3 也可以采用这种方式查看差异的文明名：</span><span class="token function">git</span> <span class="token function">diff</span> head~m <span class="token function">head</span> --stat<span class="token comment" spellcheck="true"># ( 推荐这种，当我们刚刚完成一次提交后，可以采用该条命令查看一下刚才的提交相较上一次的提交的差异：</span><span class="token function">git</span> <span class="token function">diff</span> head~1 <span class="token function">head</span> --stat<span class="token comment" spellcheck="true"># 当然也可以直接跟一个具体的文件：</span><span class="token function">git</span> <span class="token function">diff</span> head~1 <span class="token function">head</span> src/java/test.java<span class="token comment" spellcheck="true"># 还可以将这两次提交的差异提取到一个文件中：</span><span class="token function">git</span> <span class="token function">diff</span> head~1 <span class="token function">head</span> src/java/test.java src/java/test2.java <span class="token operator">></span> 1.txt<span class="token comment" spellcheck="true"># )</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="比较本地与远端分支的差异"><a href="#比较本地与远端分支的差异" class="headerlink" title="比较本地与远端分支的差异"></a>比较本地与远端分支的差异</h2><p>比较本地分支 master 与 远端分支 master 之间的差异：<code>git diff master origin/master</code></p><p>可以只看差异的文件名：<code>git diff master origin/dev --name-only</code></p><p>比较两个远端分支之间的差异：<code>git diff origin/dev origin/feature</code></p><p><strong>总的来说，当我们修改完一个项目后，可以这样使用：</strong></p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">diff</span> --stat<span class="token function">git</span> add <span class="token keyword">.</span><span class="token function">git</span> commit -m <span class="token string">"xxx"</span><span class="token function">git</span> push origin master --tags<span class="token comment" spellcheck="true"># 想查看日志</span><span class="token function">git</span> log<span class="token function">git</span> refloggitk<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="撤销提交"><a href="#撤销提交" class="headerlink" title="撤销提交"></a>撤销提交</h1><p>一种常见的场景是，提交代码后，你突然意识到这个提交有问题，应该撤销掉，这时执行下面的命令就好了：<code>git revert HEAD</code><br>上面命令的原理是：在当前提交后面，新增一次提交，撤销掉上一次提交导致的所有变化。他不会改变过去的历史，所以是首选方式，没有任何丢失代码的风险。<br>git revert 命令只能抵消掉上一次的提交，如果想抵消多个提交，必须在命令行依次指定这些提交。比如抵消前两个提交，要像下面这样写：<br><code>git revert [倒数第一个提交] [倒数第二个提交]</code><br>git revert 命令还有两个参数：</p><ul><li>–no-edit: 执行时不打开默认编辑器，直接使用 git 自动生成的提交信息</li><li>–no-commit: 只抵消暂存区和工作区的文件变化，不产生新的提交.</li></ul><h1 id="撤销工作区的文件修改"><a href="#撤销工作区的文件修改" class="headerlink" title="撤销工作区的文件修改"></a>撤销工作区的文件修改</h1><p>如果工作区的某个文件被乱改了，但还没有提交，可以用 git checkout 命令找回本次修改之前的内容<br>git checkout – [filename]<br>它的原理是先找暂存区，如果该文件有暂存的版本，则恢复该版本，否则恢复上一次提交的版本。<br>注意：工作区的文件变化一旦被撤销，就无法找回了</p><h1 id="从暂存区撤销文件"><a href="#从暂存区撤销文件" class="headerlink" title="从暂存区撤销文件"></a>从暂存区撤销文件</h1><p>如果不小心把一个文件添加到暂存区，可以用下面的命令撤销：<code>git rm --cached [filename]</code>，该命令不影响已经提交的内容</p><h1 id="撤销当前分支的变化"><a href="#撤销当前分支的变化" class="headerlink" title="撤销当前分支的变化"></a>撤销当前分支的变化</h1><p>你在当前分支上做了几次提交，突然发现放错了分支，这几个提交应该放到另一个分支，此时你可以如下做：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 新建一个 feature 分支，指向当前最新的提交</span><span class="token comment" spellcheck="true"># 注意，这时依然停留在当前分支</span><span class="token function">git</span> branch feature<span class="token comment" spellcheck="true"># 切换到这几次提交之前的状态</span><span class="token function">git</span> reset --hard <span class="token punctuation">[</span>当前分支此前的最后一次从提交<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 切换到 feature 分支</span><span class="token function">git</span> checkout feature<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面的操作等于是撤销当前分支的变化，将这些变化放到一个新建的分支</p><p><a href="#ive-no-idea-what-i-did-wrong"></a></p><h1 id="我不知道我做错了些什么"><a href="#我不知道我做错了些什么" class="headerlink" title="我不知道我做错了些什么"></a>我不知道我做错了些什么</h1><p>你把事情搞砸了：你 <code>重置(reset)</code> 了一些东西, 或者你合并了错误的分支, 亦或你强推了后找不到你自己的提交(commit)了。有些时候, 你一直都做得很好, 但你想回到以前的某个状态。</p><p>这就是 <code>git reflog</code> 的目的， <code>reflog</code> 记录对分支顶端(the tip of a branch)的任何改变, 即使那个顶端没有被任何分支或标签引用。基本上, 每次HEAD的改变, 一条新的记录就会增加到<code>reflog</code>。遗憾的是，这只对本地分支起作用，且它只跟踪动作 (例如，不会跟踪一个没有被记录的文件的任何改变)。</p><pre class="line-numbers language-sh"><code class="language-sh">git reflog0a2e358 HEAD@{0}: reset: moving to HEAD~20254ea7 HEAD@{1}: checkout: moving from 2.2 to masterc10f740 HEAD@{2}: checkout: moving from master to 2.2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>上面的reflog展示了从master分支签出(checkout)到2.2 分支，然后再签回。 那里，还有一个硬重置(hard reset)到一个较旧的提交。最新的动作出现在最上面以 <code>HEAD@{0}</code>标识.</p><p>如果事实证明你不小心回移(move back)了提交(commit), reflog 会包含你不小心回移前master上指向的提交(0254ea7)。</p><pre class="line-numbers language-sh"><code class="language-sh">git reset --hard 0254ea7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后使用git reset就可以把master改回到之前的commit，这提供了一个在历史被意外更改情况下的安全网。</p><p>(<a href="https://www.atlassian.com/git/tutorials/rewriting-history/git-reflog" target="_blank" rel="noopener">摘自</a>).</p><h1 id="其它资源-Other-Resources"><a href="#其它资源-Other-Resources" class="headerlink" title="其它资源(Other Resources)"></a>其它资源(Other Resources)</h1><h2 id="书-Books"><a href="#书-Books" class="headerlink" title="书(Books)"></a>书(Books)</h2><ul><li><a href="https://git-scm.com/book/en/v2" target="_blank" rel="noopener">Pro Git</a> - Scott Chacon’s excellent git book</li><li><a href="https://github.com/pluralsight/git-internals-pdf" target="_blank" rel="noopener">Git Internals</a> - Scott Chacon’s other excellent git book</li></ul><h1 id="教程-Tutorials"><a href="#教程-Tutorials" class="headerlink" title="教程(Tutorials)"></a>教程(Tutorials)</h1><ul><li><a href="https://learngitbranching.js.org/" target="_blank" rel="noopener">Learn Git branching</a> 一个基于网页的交互式 branching/merging/rebasing 教程</li><li><a href="https://medium.com/@porteneuve/getting-solid-at-git-rebase-vs-merge-4fa1a48c53aa" target="_blank" rel="noopener">Getting solid at Git rebase vs. merge</a></li><li><a href="https://github.com/asmeurer/git-workflow" target="_blank" rel="noopener">git-workflow</a> - <a href="https://github.com/asmeurer" target="_blank" rel="noopener">Aaron Meurer</a>的怎么使用Git为开源仓库贡献</li><li><a href="http://hugogiraudel.com/2015/08/13/github-as-a-workflow/" target="_blank" rel="noopener">GitHub as a workflow</a> - 使用GitHub做为工作流的趣事, 尤其是空PRs</li></ul><h1 id="脚本和工具-Scripts-and-Tools"><a href="#脚本和工具-Scripts-and-Tools" class="headerlink" title="脚本和工具(Scripts and Tools)"></a>脚本和工具(Scripts and Tools)</h1><ul><li><a href="http://firstaidgit.io/" target="_blank" rel="noopener">firstaidgit.io</a> 一个可搜索的最常被问到的Git的问题</li><li><a href="https://github.com/unixorn/git-extra-commands" target="_blank" rel="noopener">git-extra-commands</a> - 一堆有用的额外的Git脚本</li><li><a href="https://github.com/tj/git-extras" target="_blank" rel="noopener">git-extras</a> - GIT 工具集 – repo summary, repl, changelog population, author commit percentages and more</li><li><a href="https://github.com/qw3rtman/git-fire" target="_blank" rel="noopener">git-fire</a> - git-fire 是一个 Git 插件，用于帮助在紧急情况下添加所有当前文件, 做提交(committing), 和推(push)到一个新分支(阻止合并冲突)。</li><li><a href="https://github.com/git-tips/tips" target="_blank" rel="noopener">git-tips</a> - Git小提示</li><li><a href="https://github.com/Originate/git-town" target="_blank" rel="noopener">git-town</a> - 通用，高级Git工作流支持！ <a href="http://www.git-town.com" target="_blank" rel="noopener">http://www.git-town.com</a></li></ul><h1 id="GUI客户端-GUI-Clients"><a href="#GUI客户端-GUI-Clients" class="headerlink" title="GUI客户端(GUI Clients)"></a>GUI客户端(GUI Clients)</h1><ul><li><a href="https://www.gitkraken.com/" target="_blank" rel="noopener">GitKraken</a> - 豪华的Git客户端 Windows, Mac &amp; Linux</li><li><a href="https://git-cola.github.io/" target="_blank" rel="noopener">git-cola</a> - 另外一个Git客户端 Windows &amp; OS X</li><li><a href="https://github.com/git-up/GitUp" target="_blank" rel="noopener">GitUp</a> - 一个新的Git客户端，在处理Git的复杂性上有自己的特点</li><li><a href="https://rowanj.github.io/gitx/" target="_blank" rel="noopener">gitx-dev</a> - 图形化的Git客户端 OS X</li><li><a href="https://www.sourcetreeapp.com/" target="_blank" rel="noopener">Source Tree</a> - 免费的图形化Git客户端 Windows &amp; OS X</li><li><a href="http://www.git-tower.com/" target="_blank" rel="noopener">Tower</a> - 图形化Git客户端 OS X(付费)</li></ul>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>&lt;&lt;鸡毛飞上天&gt;&gt;观后感</title>
      <link href="/2019/12/09/ji-mao-fei-shang-tian-guan-hou-gan/"/>
      <url>/2019/12/09/ji-mao-fei-shang-tian-guan-hou-gan/</url>
      
        <content type="html"><![CDATA[<h1 id="剧本介绍"><a href="#剧本介绍" class="headerlink" title="剧本介绍"></a>剧本介绍</h1><p>这部剧名叫<strong><a href="https://www.youtube.com/watch?v=QUdDbTso5zQ" target="_blank" rel="noopener">&lt;&lt;鸡毛飞上天&gt;&gt;</a></strong>，故事主要讲述了<a href="https://zh.wikipedia.org/wiki/义乌" target="_blank" rel="noopener">义乌</a>浙商三代人的拼搏历程。第一代浙商以陈金水的敲糖帮为主，通过“鸡毛换糖”带领乡间百姓走出困病。第二代陈江河跟着大伯陈金水四处闯荡，以“鸡毛换糖”建起鸡毛掸子厂，但之后因大伯力邀南下掌舵新开的袜厂而辞职，开始了艰难的创业之路，创业期间与被自己年幼时的搭档、四川姑娘骆玉珠几经磨难、终成夫妻，并成立义乌最大的玉珠集团；陈江河好友邱英杰却因重病去世，将女儿邱岩托付给他。随着陈江河夫妻因海外仓而卷入绑架案，最终被迫变卖资产，但第三代浙商陈江河的儿子王旭却经顽强努力，从事医疗器械研发，将公司岩旭科技推上<a href="https://zh.wikipedia.org/wiki/創業板" target="_blank" rel="noopener">创业板</a>。而弟弟陈铮却忙着在已成为国际化贸易重地的义乌另辟蹊径，以网站为平台创业，帮助哥哥王旭将海外仓成功运营；而王旭也凭借自己的努力和付出，在十六年后获得邱岩的接受<a href="https://zh.wikipedia.org/wiki/鸡毛飞上天#cite_note-3" target="_blank" rel="noopener">[3]</a><a href="https://zh.wikipedia.org/wiki/鸡毛飞上天#cite_note-4" target="_blank" rel="noopener">[4]</a>。</p><img src="10.jpg" style="border-radius: 10px;"><h1 id="推荐原因"><a href="#推荐原因" class="headerlink" title="推荐原因"></a>推荐原因</h1><p>网上有许多关于这部电视剧的评价，在这里我只发表下个人的粗鄙之间，这部剧整整55集，我一集没落得全看完了，我只想说三个字：“很好看”。张译和殷桃的演技自不用多说，绝对的top水准；其次是剧情选题很好。全剧紧紧围绕三条主线发展：情感线、事业线、时代线，三条主线蜿蜒曲折，错综复杂，纠缠了主人公的一生。</p><img src="1.jpg" style="border-radius: 10px;"><h1 id="精彩剧照"><a href="#精彩剧照" class="headerlink" title="精彩剧照"></a>精彩剧照</h1><img src="2.jpg" style="border-radius: 10px; width: 50%;"><img src="3.jpg" style="border-radius: 10px; width: 50%;"><img src="4.jpg" style="border-radius: 10px; width: 50%;"><img src="5.jpg" style="border-radius: 10px; width: 50%;"><img src="6.jpg" style="border-radius: 10px; width: 50%;"><img src="7.jpg" style="border-radius: 10px; width: 50%;"><img src="8.jpg" style="border-radius: 10px; width: 50%;"><img src="9.jpg" style="border-radius: 10px; width: 50%;"><img src="11.jpg" style="border-radius: 10px; width: 50%;"><img src="12.jpg" style="border-radius: 10px; width: 50%;"><img src="13.jpg" style="border-radius: 10px; width: 50%;"><img src="14.jpg" style="border-radius: 10px; width: 50%;"><img src="15.jpg" style="border-radius: 10px; width: 50%;"><img src="16.jpg" style="border-radius: 10px; width: 50%;"><img src="18.jpg" style="border-radius: 10px; width: 50%;"><h1 id="感悟"><a href="#感悟" class="headerlink" title="感悟"></a>感悟</h1><p>这部电视剧中的催泪点有好多，我的眼睛不止一次红过。</p><p>说到最吸引我的地方其实是陈江河(张译饰，这里我不得不再赞一波张译的演技)的个人魅力，这个小人物的身上真是有太多太多令人着迷的优点了，包括性格、智慧、能力、眼光、宽容、信心和永永远远乐观的心态。真的是每一个想要成功的人必不可少的一个品质或者说是必须具备的一个能力一定是自信，永远对自己，对生活，对挑战，对明天的自信，<strong>请记住如果你想成为一个在某方面超越别人，了不起的人，最最关键的一点是自信自信</strong>而绝不是能力，这部剧确实在情感上打动了我，但最令我印象深刻的是交给了我许多道理以及感悟。这里我援引剧中的一些台词，来细细说一点我的体会</p><ul><li>知识的重要性</li></ul><p>– “以后你有了知识你就会发现说这个义乌以外有中国，中国之外有世界”</p><p>我这里指的绝不是读书，因为<strong>读书多！=知识深</strong>，因为随着年龄的增长，你会越来越发现，真正有用且关键的知识绝不在课本上，那在哪里呢？答案是在社会，在他人，在万物。所以在这里我想说，我们每个人一定要时刻保持一种学习的心态。</p><ul><li>男人心胸一定要宽广</li></ul><p>– “容人 荣事 眼界 心胸”</p><p>这一点其实大部分人可能都不会注意到或者说不再乎，认为不那么重要，但是这一点是男人必须学会并且要做到的。为人子，为人夫，为人父，为生活，心胸一定要宽广，要以一个宽容(即使是暂时的宽容)的心态去看待生活中的一切。只有心胸变大了之后，你才能抗得了压力，承受得了委屈，你的眼界才能不那么狭隘，你才能担负得起生活的重担。</p><ul><li>要想成功，必须自信</li></ul><p>– “你就是担心说莱昂能把岩岩给拐跑了，对不对，你跟岩岩从小一起玩大，你竟然说会害怕一个外国人一个陌生人把她拐跑了，你得多不自信哪！而且你让我难过的是你竟然用其他的理由，宁可牺牲公司的利益去达到自己这点小心思，你给我照照镜子，看看你现在什么德行，心就这么大，你担心的全都是你根本就不该担心的事情啊，你不可救药啊你，二十多岁了，白活了，到现在一心还在这儿，不是凭着自己的潇洒去活着，一点都不洒脱，满心装的都是恐惧，你装什么啊你！”</p><p>为什么要说到这一点呢，因为我就属于那种特别自卑的人。而且你会发现自信是这三点中最难做到的一点，而且只有自己去摸索，去历练，去转变。说到这里可能大部分人都认为自信是自己的事，别人都帮不了你；其实这个看法是最错误的一种观点，因为自卑的人都知道，获得别人的认可对于自己是多么的难能可贵，有时候可能就是一个别人的微笑或者是一句中肯的评价，你就会发现一个自卑的人慢慢开始自信起来了，所以他人的反馈对于一个自卑的人是很重要的。</p><p>暂时先写这么多吧(原谅我的文笔很差)，现在脑子有点乱，待有新想法后我再更新吧。。。</p><img src="17.jpg" style="border-radius: 10px;">]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 影视 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql约束</title>
      <link href="/2019/11/26/mysql-yue-shu/"/>
      <url>/2019/11/26/mysql-yue-shu/</url>
      
        <content type="html"><![CDATA[<h1 id="约束的定义"><a href="#约束的定义" class="headerlink" title="约束的定义"></a>约束的定义</h1><p>约束用于规定表中的数据规则，保证表中的记录的完整和有效。如果存在违反约束的数据行为，行为会被约束终止，约束可以在创建表时规定(通过 create table 语句)，或者在表创建之后规定(通过 alter table 语句)</p><h1 id="约束种类"><a href="#约束种类" class="headerlink" title="约束种类"></a>约束种类</h1><ul><li>非空约束（not null）</li><li>唯一性约束（unique）</li><li>主键约束（primary key）</li><li>外键约束（foreign key）</li><li>检查约束（check 适用于 Oracle）</li><li>缺省约束（default）</li></ul><p><em>注意：约束有上面的6种，但是这些约束还有：<strong>表级约束</strong>和<strong>列级约束</strong>的划分</em></p><p><strong>列级约束</strong>：包含在列定义中，直接跟在该列的定义之后，用 <code>空格</code> 分割；不必指定列名。是对某一个特定列的约束，有五种：主键、唯一、检查、默认、非空，即<em>除了外键约束外</em>，所有约束都有列级约束的表现形式</p><p><strong>表级约束</strong>：与列级约束的定义相互独立，不包含在列级约束中；通常用于对多个列一起进行约束，约束与定义之间用 <code>,</code> 分割；必须指出要约束的列的名称。用于对多个列一起进行约束，有四种：主键、外键、唯一、检查（巧记：非空约束和缺省约束没有表级约束的表现形式）</p><p>而每一种约束又有<strong>单一约束</strong>和<strong>联合约束</strong>之分，比如我们常见的非空约束，既可以只约束一个字段，也可以同时约束多个字段</p><h2 id="非空约束"><a href="#非空约束" class="headerlink" title="非空约束"></a>非空约束</h2><p>创建表，给字段添加非空约束</p><pre class="line-numbers language-mysql"><code class="language-mysql">// 非空约束的列级约束表现形式create table t_user(    id int(3),    name varchar(255) not null);// 注意：非空约束没有表级约束，只有列级约束，所以这里只给出了列级约束的例子<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>插入数据时如果没有插入 name 字段的数据，则会报错</p><h2 id="唯一性约束"><a href="#唯一性约束" class="headerlink" title="唯一性约束"></a>唯一性约束</h2><p>使用 unique 约束的字段，具有唯一性，不可以重复，但是可以为 null</p><pre class="line-numbers language-mysql"><code class="language-mysql">// 唯一性约束的列级约束表现形式create table t_user(    id int(3),    name varchar(255) not null,    email varchar(255) unique);// 唯一性约束的表级约束表现形式create table t_user(    id int(3),    name varchar(255) not null,    email varchar(255),    unique(email));<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果有两条检录插入相同的 email 值，则会报错</p><pre class="line-numbers language-mysql"><code class="language-mysql">mysql> insert into t_user(id,name,email) values(1,'xlj','932834897@qq.com');Query OK, 1 row affected (0.00 sec)mysql> insert into t_user(id,name,email) values(2,'jay','932834897@qq.com');ERROR 1062 (23000): Duplicate entry '932834897@qq.com' for key 'email'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>拓展：在实际开发中有时候可能会有注册用户时用户名不能重复的需求，这时候我们就可以通过唯一性约束来实现，而不必非要通过后端的逻辑去实现</p><p>上面的例子都是单一约束，我们再来看一下唯一性约束的联合约束的表现形式，联合约束多见于表级约束：</p><p>联合约束意为如果两条记录中，所定义的联合约束的字段的值都相同，则报错</p><pre class="line-numbers language-mysql"><code class="language-mysql">// 唯一性约束的联合约束形式create table t_user(    id int(3),    name varchar(255) not null,    email varchar(255),    unique(name, email));// 插入第一条数据mysql> insert into t_user(id,name,email) values(1,'xxx','qq.com');Query OK, 1 row affected (0.05 sec)// 插入第二条数据，如果只是与联合约束中的某一个字段相同，并不会报错mysql> insert into t_user(id,name,email) values(2,'mmm','qq.com');Query OK, 1 row affected (0.05 sec)// 如果是插入的记录中的两个联合约束的字段都与已存在的记录相同，则报错mysql> insert into t_user(id,name,email) values(3,'mmm','qq.com');ERROR 1062 (23000): Duplicate entry 'mmm-qq.com' for key 'name'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>表级约束可以使用关键字 <code>constraint</code> 起名字，方便之后删除该约束</p><pre class="line-numbers language-mysql"><code class="language-mysql">create table t_user(    id int(3),    name varchar(255) not null,    email varchar(255),    constraint t_user_name_email_unique unique(name, email));// 格式: constraint 该约束起的名 约束()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="主键约束"><a href="#主键约束" class="headerlink" title="主键约束"></a>主键约束</h2><p>主键约束和 <code>not null unique</code> 的区别：给某个字段添加主键约束之后，该字段不能重复也不能为空，其表现效果上和 <code>not null unique</code> 相同，但二者的本质不同。因为主键约束还会默认添加为 索引 –index</p><p>主键呢又有 单一主键和复合主键之分，但是无论是单一主键还是复合主键，一张表的主键约束却只能有一个（只能有一个主键约束），但是可以作用于多个字段</p><p>单一主键：主键约束只作用于一个字段</p><p>复合主键：主键约束作用于多个字段（只能用于表级约束）</p><pre class="line-numbers language-mysql"><code class="language-mysql">// 单一主键（列级定义）mysql> create table t_user(    -> id int(10) primary key,    -> name varchar(32)    -> );Query OK, 0 rows affected (0.07 sec)// 单一主键（表级定义）mysql> create table t_user(    -> id int(10),    -> name varchar(32) not null,    -> constraint t_user_id_pk primary key(id)    -> );Query OK, 0 rows affected (0.01 sec)// 复合主键（标记定义）mysql> create table t_user(    -> id int(10),    -> name varchar(32) not null,    -> email varchar(128) unique,    -> primary key(id,name)    -> );Query OK, 0 rows affected (0.05 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在 MySql 中提供了一个自动生成主键值的功能，主键值不用用户自己维护，默认从1开始自动递增</p><h2 id="外键约束"><a href="#外键约束" class="headerlink" title="外键约束"></a>外键约束</h2><p>不常用，而且不建议使用</p><h1 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h1><p>本文参考自<a href="https://blog.csdn.net/w_linux/article/details/79655073" target="_blank" rel="noopener">https://blog.csdn.net/w_linux/article/details/79655073</a>，有兴趣的可以查看</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java中使用HSSFWorkbook生成excel</title>
      <link href="/2019/11/12/java-zhong-shi-yong-hssfworkbook-sheng-cheng-excel/"/>
      <url>/2019/11/12/java-zhong-shi-yong-hssfworkbook-sheng-cheng-excel/</url>
      
        <content type="html"><![CDATA[<p><img src="1.jpg" alt></p><h1 id="HSSFWorkbook-介绍"><a href="#HSSFWorkbook-介绍" class="headerlink" title="HSSFWorkbook 介绍"></a>HSSFWorkbook 介绍</h1><hr><p>开发中经常会遇到 Excel 的处理，在 Java 中，操作 excel 目前有两个主流框架，分别是：</p><ul><li>apache 的 poi</li></ul><blockquote><p>Apache POI [1]  是用Java编写的免费开源的跨平台的 Java API，Apache POI提供API给Java程式对Microsoft Office格式档案读和写的功能。POI为“Poor Obfuscation Implementation”的首字母缩写，意为“简洁版的模糊实现”。</p></blockquote><ul><li>Java Excel</li></ul><blockquote><p>Java Excel是一开放源码项目，通过它Java开发人员可以读取Excel文件的内容、创建新的Excel文件、更新已经存在的Excel文件。jxl 由于其小巧 易用的特点, 逐渐已经取代了 POI-excel的地位, 成为了越来越多的java开发人员生成excel文件的首选</p></blockquote><p>这里提一下：HSSFWorkbook:是操作Excel2003以前（包括2003）的版本，扩展名是.xls；XSSFWorkbook:是操作Excel2007的版本，扩展名是.xlsx。对于不同版本的EXCEL文档要使用不同的工具类，如果使用错了，会提示如下错误信息：org.apache.poi.openxml4j.exceptions.InvalidOperationException，org.apache.poi.poifs.filesystem.OfficeXmlFileException</p><p><img src="2.jpg" alt></p><h1 id="HSSFWorkbook-的使用"><a href="#HSSFWorkbook-的使用" class="headerlink" title="HSSFWorkbook 的使用"></a>HSSFWorkbook 的使用</h1><hr><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>knowledge<span class="token punctuation">.</span>point<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>hssf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>ss<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span>Font<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>HashMap<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author: latinos-bub * @date: 2019/11/12 17:32 * @description: 测试生成 excel * @className: com.knowledge.point.TestGenExcel */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestGenExcel</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception<span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 创建一个 excel 工作簿</span>        HSSFWorkbook workbook <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 创建一个 excel 里面的 sheet 表格，并设置 sheet 名字</span>        HSSFSheet sheet <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span><span class="token string">"测试生成 excel 表格是否乱码"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// -------------------------------设置 工作簿的 样式 start--------------------------//</span>        HSSFCellStyle titleStyle  <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 创建标题样式</span>        titleStyle<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span>HSSFCellStyle<span class="token punctuation">.</span>ALIGN_CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 设置标题水平居中显示</span>        titleStyle<span class="token punctuation">.</span><span class="token function">setVerticalAlignment</span><span class="token punctuation">(</span>HSSFCellStyle<span class="token punctuation">.</span>VERTICAL_CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 设置标题垂直居中显示</span>        HSSFFont titleFont <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 创建标题字体</span>        titleFont<span class="token punctuation">.</span><span class="token function">setItalic</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     <span class="token comment" spellcheck="true">// 设置字体为斜体字</span>        titleFont<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>Font<span class="token punctuation">.</span>COLOR_RED<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 将字体设置为“红色”</span>        titleFont<span class="token punctuation">.</span><span class="token function">setFontHeightInPoints</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 将字体大小设置为18px</span>        titleFont<span class="token punctuation">.</span><span class="token function">setFontName</span><span class="token punctuation">(</span><span class="token string">"宋体"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token comment" spellcheck="true">// 将“宋体”字体应用到当前单元格上</span>        titleFont<span class="token punctuation">.</span><span class="token function">setBoldweight</span><span class="token punctuation">(</span>HSSFFont<span class="token punctuation">.</span>BOLDWEIGHT_BOLD<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//加粗</span>        titleStyle<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>titleFont<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 将 字体应用到 标题样式上</span>        HSSFCellStyle cellStyle  <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 创建 cell 单元格样式</span>        cellStyle<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span>HSSFCellStyle<span class="token punctuation">.</span>ALIGN_CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 设置 cell 单元格水平居中显示</span>        cellStyle<span class="token punctuation">.</span><span class="token function">setVerticalAlignment</span><span class="token punctuation">(</span>HSSFCellStyle<span class="token punctuation">.</span>VERTICAL_CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 设置 cell 单元格垂直居中显示</span>        Font cellFont <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 创建 单元格 字体</span>        cellFont<span class="token punctuation">.</span><span class="token function">setFontHeightInPoints</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 将字体大小设置为18px</span>        cellFont<span class="token punctuation">.</span><span class="token function">setFontName</span><span class="token punctuation">(</span><span class="token string">"宋体"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token comment" spellcheck="true">// 字体应用到当前单元格上</span>        cellStyle<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>cellFont<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 将 字体应用到 单元格样式上</span>        <span class="token comment" spellcheck="true">// -------------------------------设置 工作簿的 样式 end--------------------------//</span>        <span class="token comment" spellcheck="true">// 创建 首行(即标题 行)</span>        HSSFRow headRow <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 创建 首行(即标题 行) 的 第一个单元格</span>        HSSFCell headCell <span class="token operator">=</span> headRow<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 设置 首行(即标题 行)的文字内容</span>        headCell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"更新时间"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        headCell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>titleStyle<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 设置 首行的 第一个单元格 样式</span>        <span class="token comment" spellcheck="true">// 创建 首行(即标题 行) 的 第二个单元格</span>        headCell <span class="token operator">=</span> headRow<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        headCell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"创建时间"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        headCell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>titleStyle<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 这里一定要每次实例化之后都要设置样式</span>        headCell <span class="token operator">=</span> headRow<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        headCell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"删除状态"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        headCell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>titleStyle<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 这里一定要每次实例化之后都要设置样式</span>        headCell <span class="token operator">=</span> headRow<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        headCell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        headCell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>titleStyle<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 这里一定要每次实例化之后都要设置样式</span>        headCell <span class="token operator">=</span> headRow<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        headCell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token string">"书名"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        headCell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>titleStyle<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 这里一定要每次实例化之后都要设置样式</span>        <span class="token comment" spellcheck="true">// 获取 模拟的 List&lt;Map&lt;String, Object> 数据</span>        List<span class="token operator">&lt;</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">>></span> list <span class="token operator">=</span> <span class="token function">getList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// 外层for是每一行的设置</span>            <span class="token comment" spellcheck="true">// 每一行(填充的内容行)时，我们都要新实例化一个 HSSRow 新行</span>            HSSFRow contentRow <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span>sheet<span class="token punctuation">.</span><span class="token function">getLastRowNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 调用sheet的上次最后一行索引 + 1即可</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 内层 for 是 每行的 列数设置，因为我们的标题行有5列，所以这里设置5列</span>                <span class="token comment" spellcheck="true">// 每一行，我们都要在该行(即contentRow) 实例化 5 个 cell 单元格</span>                HSSFCell contentCell <span class="token operator">=</span> contentRow<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">switch</span> <span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 1，2，3，4，5个单元格分别写入自己正确的数据</span>                    <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span> <span class="token comment" spellcheck="true">// 每一行的第一列(即第一个cell)我们都写入 update_time 对应的数据，以下依次类推</span>                        contentCell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"update_time"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>                        contentCell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"create_time"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>                        contentCell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"delete_status"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>                        contentCell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>                        contentCell<span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"content"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token comment" spellcheck="true">// 设置 内容 居中显示 样式</span>                contentCell<span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>cellStyle<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 设置 列 的宽度</span>        sheet<span class="token punctuation">.</span><span class="token function">setColumnWidth</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">900</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        sheet<span class="token punctuation">.</span><span class="token function">setColumnWidth</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">900</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        sheet<span class="token punctuation">.</span><span class="token function">setColumnWidth</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">900</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        sheet<span class="token punctuation">.</span><span class="token function">setColumnWidth</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">900</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        sheet<span class="token punctuation">.</span><span class="token function">setColumnWidth</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">900</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        File xlsFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"测试生成Excel.xls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        workbook<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>xlsFile<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        workbook<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 补充：如果是 web 程序，需要页面打开一个对话框，保存文件则，需要额外添加以下代码即可</span>        <span class="token comment" spellcheck="true">/*String fileName = "excel表";        fileName = new String(fileName.getBytes(), "ISO-8859-1");        HttpServletResponse response = this.getResponse().getHttpResponse();        response.setHeader("Content-disposition", "attachment; filename=" + fileName + ".xls");        response.setContentType("application/application/vnd.ms-excel;charset=utf-8");        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();        // workbook 工作簿中写入数据        workbook.write(byteArrayOutputStream);        byte[] content = byteArrayOutputStream.toByteArray();        InputStream inputStream = new ByteArrayInputStream(content);        ServletOutputStream out = null;        try {            out = response.getOutputStream();            byte[] b = new byte[2048];  // 设置 缓冲区的读取字节大小            int i;            while ((i = inputStream.read(b)) > 0) {                out.write(b, 0, i);            }            out.flush();        } catch (Exception e) {            System.out.println("生成excel表格时出错: " + e.getMessage());        } finally {            if (inputStream != null)                inputStream.close();            if (out != null)                out.close();        }*/</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**    * @Author latinos-bub    * @Description //TODO   这里我先准备一个从别的地方获取的 sql 结果集合，以备下面写入数据使用     * 这个 List 中我们就存放 12 个 Map 即可(模拟数据)    * @Date 2019/11/12 21:17    * @Param []    * @return java.util.List&lt;java.util.Map&lt;java.lang.String,java.lang.Object>>    **/</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> List<span class="token operator">&lt;</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">>></span> <span class="token function">getList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">>></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">>></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> map1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map1<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"update_time"</span><span class="token punctuation">,</span> <span class="token string">"1569404166000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map1<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"create_time"</span><span class="token punctuation">,</span> <span class="token string">"1569404122000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map1<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"delete_status"</span><span class="token punctuation">,</span> <span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map1<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">,</span> <span class="token string">"2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map1<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"content"</span><span class="token punctuation">,</span> <span class="token string">"如何削铁"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>map1<span class="token punctuation">)</span><span class="token punctuation">;</span>        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> map2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map2<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"update_time"</span><span class="token punctuation">,</span> <span class="token string">"1509357581000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map2<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"create_time"</span><span class="token punctuation">,</span> <span class="token string">"1508893725000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map2<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"delete_status"</span><span class="token punctuation">,</span> <span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map2<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">,</span> <span class="token string">"5"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map2<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"content"</span><span class="token punctuation">,</span> <span class="token string">"莎士比亚"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>map2<span class="token punctuation">)</span><span class="token punctuation">;</span>        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> map3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map3<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"update_time"</span><span class="token punctuation">,</span> <span class="token string">"1510970055000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map3<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"create_time"</span><span class="token punctuation">,</span> <span class="token string">"1508986168000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map3<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"delete_status"</span><span class="token punctuation">,</span> <span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map3<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">,</span> <span class="token string">"6"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map3<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"content"</span><span class="token punctuation">,</span> <span class="token string">"亚里士多德"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>map3<span class="token punctuation">)</span><span class="token punctuation">;</span>        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> map4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map4<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"update_time"</span><span class="token punctuation">,</span> <span class="token string">"1510118932000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map4<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"create_time"</span><span class="token punctuation">,</span> <span class="token string">"1509001065000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map4<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"delete_status"</span><span class="token punctuation">,</span> <span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map4<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">,</span> <span class="token string">"10"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map4<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"content"</span><span class="token punctuation">,</span> <span class="token string">"亚历山大"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>map4<span class="token punctuation">)</span><span class="token punctuation">;</span>        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> map5 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map5<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"update_time"</span><span class="token punctuation">,</span> <span class="token string">"1509002622000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map5<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"create_time"</span><span class="token punctuation">,</span> <span class="token string">"1509002622000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map5<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"delete_status"</span><span class="token punctuation">,</span> <span class="token string">"0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map5<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">,</span> <span class="token string">"11"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map5<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"content"</span><span class="token punctuation">,</span> <span class="token string">"李白"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>map5<span class="token punctuation">)</span><span class="token punctuation">;</span>        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> map6 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map6<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"update_time"</span><span class="token punctuation">,</span> <span class="token string">"1569376168000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map6<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"create_time"</span><span class="token punctuation">,</span> <span class="token string">"1569404290000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map6<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"delete_status"</span><span class="token punctuation">,</span> <span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map6<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">,</span> <span class="token string">"12"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map6<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"content"</span><span class="token punctuation">,</span> <span class="token string">"无用是什么"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>map6<span class="token punctuation">)</span><span class="token punctuation">;</span>        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> map7 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map7<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"update_time"</span><span class="token punctuation">,</span> <span class="token string">"1569376160000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map7<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"create_time"</span><span class="token punctuation">,</span> <span class="token string">"1569404290000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map7<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"delete_status"</span><span class="token punctuation">,</span> <span class="token string">"0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map7<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">,</span> <span class="token string">"13"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map7<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"content"</span><span class="token punctuation">,</span> <span class="token string">"选择吃什么饭是一件很痛苦的事"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>map7<span class="token punctuation">)</span><span class="token punctuation">;</span>        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> map8 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map8<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"update_time"</span><span class="token punctuation">,</span> <span class="token string">"1510983431000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map8<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"create_time"</span><span class="token punctuation">,</span> <span class="token string">"1510983427000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map8<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"delete_status"</span><span class="token punctuation">,</span> <span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map8<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">,</span> <span class="token string">"19"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map8<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"content"</span><span class="token punctuation">,</span> <span class="token string">"文章test2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>map8<span class="token punctuation">)</span><span class="token punctuation">;</span>        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> map9 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map9<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"update_time"</span><span class="token punctuation">,</span> <span class="token string">"1569376164000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map9<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"create_time"</span><span class="token punctuation">,</span> <span class="token string">"1569404290000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map9<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"delete_status"</span><span class="token punctuation">,</span> <span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map9<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">,</span> <span class="token string">"20"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map9<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"content"</span><span class="token punctuation">,</span> <span class="token string">"就像选择在哪里睡觉一样"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>map9<span class="token punctuation">)</span><span class="token punctuation">;</span>        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> map10 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map10<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"update_time"</span><span class="token punctuation">,</span> <span class="token string">"1569376166000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map10<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"create_time"</span><span class="token punctuation">,</span> <span class="token string">"1569404290000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map10<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"delete_status"</span><span class="token punctuation">,</span> <span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map10<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">,</span> <span class="token string">"21"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map10<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"content"</span><span class="token punctuation">,</span> <span class="token string">"effective of java"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>map10<span class="token punctuation">)</span><span class="token punctuation">;</span>        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> map11 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map11<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"update_time"</span><span class="token punctuation">,</span> <span class="token string">"1569376172000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map11<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"create_time"</span><span class="token punctuation">,</span> <span class="token string">"1569404290000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map11<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"delete_status"</span><span class="token punctuation">,</span> <span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map11<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">,</span> <span class="token string">"22"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map11<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"content"</span><span class="token punctuation">,</span> <span class="token string">"荒岛求生"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>map11<span class="token punctuation">)</span><span class="token punctuation">;</span>        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> map12 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map12<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"update_time"</span><span class="token punctuation">,</span> <span class="token string">"1569376170000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map12<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"create_time"</span><span class="token punctuation">,</span> <span class="token string">"1569404290000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map12<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"delete_status"</span><span class="token punctuation">,</span> <span class="token string">"0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map12<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">,</span> <span class="token string">"23"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map12<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"content"</span><span class="token punctuation">,</span> <span class="token string">"天使永远就在身边"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>map12<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> list<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p><img src="3.jpg" alt></p><div align="middle">《行香子·归去来兮》        -- 北宋：辛弃疾</div>> 归去来兮，行乐休迟。命由天、富贵何时。百年光景，七十者稀。奈一番愁，一番病，一番衰。名利奔驰，宠辱惊疑。旧家时、都有些儿。而今老矣，识破关机。算不如闲，不如醉，不如痴。]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java爬取图片示例</title>
      <link href="/2019/11/10/java-pa-qu-tu-pian-shi-li/"/>
      <url>/2019/11/10/java-pa-qu-tu-pian-shi-li/</url>
      
        <content type="html"><![CDATA[<h1 id="爬虫是什么"><a href="#爬虫是什么" class="headerlink" title="爬虫是什么"></a>爬虫是什么</h1><hr><p>这里引用一下 wiki 中关于 网络爬虫的定义，相信大家看过后会有一个清晰的认识</p><blockquote><p>网络爬虫（英语：web crawler），也叫网络蜘蛛（spider），是一种用来自动浏览万维网的网络机器人。其目的一般为编纂网络索引。</p></blockquote><blockquote><p>网络搜索引擎等站点通过爬虫软件更新自身的网站内容或其对其他网站的索引。网络爬虫可以将自己所访问的页面保存下来，以便搜索引擎事后生成索引供用户搜索。</p></blockquote><blockquote><p>爬虫访问网站的过程会消耗目标系统资源。不少网络系统并不默许爬虫工作。因此在访问大量页面时，爬虫需要考虑到规划、负载，还需要讲“礼貌”。 不愿意被爬虫访问、被爬虫主人知晓的公开站点可以使用robots.txt文件之类的方法避免访问。这个文件可以要求机器人只对网站的一部分进行索引，或完全不作处理。</p></blockquote><blockquote><p>互联网上的页面极多，即使是最大的爬虫系统也无法做出完整的索引。因此在公元2000年之前的万维网出现初期，搜索引擎经常找不到多少相关结果。现在的搜索引擎在这方面已经进步很多，能够即刻给出高质量结果。</p></blockquote><blockquote><p>爬虫还可以验证超链接和HTML代码，用于网络抓取（参见数据驱动编程）。</p></blockquote><hr><p><img src="4.jpg" alt></p><h1 id="爬虫的核心"><a href="#爬虫的核心" class="headerlink" title="爬虫的核心"></a>爬虫的核心</h1><hr><ul><li>分析目标网站的数据格式</li><li>编写对应的代码爬取</li></ul><p><strong>分析目标网站的数据格式</strong> 这一步中我们需要仔细分析目标网站的html格式，寻找它们的内在联系，(如果是异步加载的数据处理起来比较麻烦一点，此处我们不做讲解)，找出规律</p><p><strong>编写对应的代码爬取</strong> 第二步我们需要伪造好我们的目标网站需要的请求头部分，同时根据第一步的规律解析出你想要的数据，然后保存即可</p><hr><p><img src="2.jpg" alt></p><h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><hr><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> photo<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>jsoup<span class="token punctuation">.</span>Jsoup<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>jsoup<span class="token punctuation">.</span>nodes<span class="token punctuation">.</span>Document<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>jsoup<span class="token punctuation">.</span>select<span class="token punctuation">.</span>Elements<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>File<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>FileOutputStream<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>InputStream<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>OutputStream<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>net<span class="token punctuation">.</span>HttpURLConnection<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>net<span class="token punctuation">.</span>URL<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Date<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * @author: latinos-bub * @date: 2019/11/10 17:18 * @description: 爬取 https://image.so.com/ 网站的图片 * @className: CrawlSophoto */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CrawlSophoto</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**    * @Author latinos-bub    * @Description //TODO 获取页面中所有的 &lt;img src/> 中的 src 链接 https://p5.ssl.qhimgs1.com/bdr/326__/t0104acadc3f46e94a5.jpg    * @Date 2019/11/10 17:20    * @Param [url]    * @return java.util.List&lt;java.lang.String>    **/</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> List<span class="token operator">&lt;</span>String<span class="token operator">></span> <span class="token function">getImgSrc</span><span class="token punctuation">(</span>String url<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception<span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 实例化 返回数据</span>        List<span class="token operator">&lt;</span>String<span class="token operator">></span> imgSrcList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 使用 Jsoup 获取 document 文档对象</span>        Document document <span class="token operator">=</span> Jsoup<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 获取所有的 img 标签元素</span>        Elements elements <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTag</span><span class="token punctuation">(</span><span class="token string">"img"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String srcUrl<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 遍历所有的 elements 元素，获取 &lt;img src/> 中的 src 属性值 (不推荐使用，涉及的图片太多了，建议使用下面的 for 循环控制大小)</span><span class="token comment" spellcheck="true">//        for (Element e : elements){</span><span class="token comment" spellcheck="true">//            srcUrl = e.attr("src");</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//            // 添加入 imgSrcList 集合中</span><span class="token comment" spellcheck="true">//            imgSrcList.add(srcUrl);</span><span class="token comment" spellcheck="true">//        }</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">7</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>   <span class="token comment" spellcheck="true">// 因为 https://image.so.com/ 图片默认是7个，采用的 异步加载，我们这里不处理这种的，只取默认的7个</span>            srcUrl <span class="token operator">=</span> elements<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"src"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 添加入 imgSrcList 集合中</span>            imgSrcList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>srcUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 返回符合你要求的所有的 &lt;img src/> 中的 src 链接</span>        <span class="token keyword">return</span> imgSrcList<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">saveImage</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>String<span class="token operator">></span> imgSrcList<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 先设置 你的图片保存位置</span>        String path <span class="token operator">=</span> <span class="token string">"E:\\本地图片\\爬虫图片\\20191110\\"</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 实例化一个 File 对象 (文件/文件夹)</span>        File file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 如果上述目录不存在，则自动创建</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            file<span class="token punctuation">.</span><span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 声明 HttpURLConnection 请求对象</span>        HttpURLConnection httpURLConnection <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 声明 InputStream 输入字节流</span>        InputStream inputStream <span class="token operator">=</span> null<span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"开始下载图片..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 循环遍历 imgSrcList</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>String src <span class="token operator">:</span> imgSrcList<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">try</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 实例化 一个特定 http 类型的新的 URL 对象</span>                URL url <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 实例化 HttpURLConnection 对象</span>                httpURLConnection <span class="token operator">=</span> <span class="token punctuation">(</span>HttpURLConnection<span class="token punctuation">)</span> url<span class="token punctuation">.</span><span class="token function">openConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 设置 HttpURLConnection 请求头部分，通过 chrome 的 F12 查看</span>                httpURLConnection<span class="token punctuation">.</span><span class="token function">setRequestProperty</span><span class="token punctuation">(</span><span class="token string">"Cookie"</span><span class="token punctuation">,</span> <span class="token string">"opqopq=0c01989c7413e5a5d21e68f310c397b5.1573377223; _S=03b161a0b5b7eaaadd261490c514a29d; __guid=16527278.863313966117013800.1573377222710.2178; count=1; tracker=; test_cookie_enable=null"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                httpURLConnection<span class="token punctuation">.</span><span class="token function">setRequestProperty</span><span class="token punctuation">(</span><span class="token string">"User-Agent"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.87 Safari/537.36"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 从 HttpURLConnection 请求对象中 实例化(获取) 输入字节流</span>                inputStream <span class="token operator">=</span> httpURLConnection<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 声明 输出流对象, 并实例化为 一个 文件输出流对象; 这里很好理解，实例化文件输出流对象，肯定需要一个文件对象作参数</span>                OutputStream outputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>path <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">".jpg"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 实例化一个 byte[] 对象，用于 io 缓冲区的大小设置</span>                <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">byte</span><span class="token punctuation">[</span><span class="token number">2048</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 接收 每次读取到的 字节数</span>                <span class="token keyword">int</span> len <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 采用 while 循环，只要满足条件，一直循环执行</span>                <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>len <span class="token operator">=</span> inputStream<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 从 输入字节流 中读取内容</span>                    <span class="token comment" spellcheck="true">// 将 读取到的 字节 写入文件即可</span>                    outputStream<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>bytes<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span> <span class="token string">"src为: "</span> <span class="token operator">+</span> src <span class="token operator">+</span> <span class="token string">" 的图片下载出错..."</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">continue</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"下载图片完成..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 输入 https://image.so.com/ 进行测试</span>        String url <span class="token operator">=</span> <span class="token string">"https://image.so.com/"</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 先获取 src 路径</span>            List<span class="token operator">&lt;</span>String<span class="token operator">></span> imgSrcList <span class="token operator">=</span> <span class="token function">getImgSrc</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 下载</span>            <span class="token function">saveImage</span><span class="token punctuation">(</span>imgSrcList<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"测试出错..."</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="结果展示"><a href="#结果展示" class="headerlink" title="结果展示"></a>结果展示</h1><p><img src="1.png" alt></p><hr><p><img src="3.jpg" alt></p><hr><p><img src="5.jpg" alt></p><div align="middle">摸鱼儿·雁丘词 / 迈陂塘·雁丘词    -- 金朝：元好问</div><blockquote><p>乙丑岁赴试并州，道逢捕雁者云：“今旦获一雁，杀之矣。其脱网者悲鸣不能去，竟自投于地而  死。”予因买得之，葬之汾水之上，垒石为识，号曰“雁丘”。 同行者多为赋诗，予亦有《雁丘词》。旧所作无宫商，今改定之。</p></blockquote><blockquote><p>问世间，情为何物，直教生死相许？<br>天南地北双飞客，老翅几回寒暑。<br>欢乐趣，离别苦，就中更有痴儿女。<br>君应有语：渺万里层云，千山暮雪，只影向谁去？<br>横汾路，寂寞当年箫鼓，荒烟依旧平楚。<br>招魂楚些何嗟及，山鬼暗啼风雨。<br>天也妒，未信与，莺儿燕子俱黄土。<br>千秋万古，为留待骚人，狂歌痛饮，来访雁丘处。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vps的搭建</title>
      <link href="/2019/11/04/vps-de-da-jian/"/>
      <url>/2019/11/04/vps-de-da-jian/</url>
      
        <content type="html"><![CDATA[<p>最近一直想自己搭建一款vps使用，但是苦于一直没有时间，直到今天得空，与大家一起分享下。</p><h1 id="服务商的选择"><a href="#服务商的选择" class="headerlink" title="服务商的选择"></a>服务商的选择</h1><hr><p>因为自己之前在 vultr 上还留有余额(60$呢，好几百块大洋呢😄)，所以我的服务商就选择 vultr 吧，其实他们家的服务也很稳定、速度也很快，成名已久，推荐大家使用<br>这一步呢，也涉及到 vultr 账号的注册、充值等步骤，但这不是重点，因此我就不写了，不清楚的可以 google</p><h1 id="选择合适的服务器"><a href="#选择合适的服务器" class="headerlink" title="选择合适的服务器"></a>选择合适的服务器</h1><hr><p>鉴于目前的生态，我建议大家选择硅谷、洛杉矶、西雅图等地区的服务器，因为这些地区的可用 ip 相对来说多一点(有一点很重要：系统一定要选择 Centos 6 * 64)，之后常规部署即可</p><h1 id="ssh-客户端工具登录部署"><a href="#ssh-客户端工具登录部署" class="headerlink" title="ssh 客户端工具登录部署"></a>ssh 客户端工具登录部署</h1><hr><p>选择一款适合你的 ssh 客户端工具，连接上你刚才选择的那台服务器(账号、密码等确保正确哦)</p><ul><li>首先先执行如下命令，更新系统： <code>yum update</code></li><li>更换系统内核：<code>rpm -ivh http://www.aloneray.com/wp-content/uploads/2017/03/kernel-firmware-2.6.32-504.3.3.el6.noarch.rpm</code></li><li>继续执行：<code>rpm -ivh http://www.aloneray.com/wp-content/uploads/2017/03/kernel-2.6.32-504.3.3.el6.x86_64.rpm --force</code></li><li>重启服务器后，安装 ssr 服务端并完成部署：<code>wget --no-check-certificate http://www.aloneray.com/wp-content/uploads/2019/01/shadowsocksR_CN.sh &amp;&amp; chmod +x shadowsocksR_CN.sh &amp;&amp; ./shadowsocksR_CN.sh</code></li><li>你只需要随便输入一个密码即可</li><li>默认回车，一直下一步即可</li><li>最会安装成功后，会有 Congratulations 信息出现，然后保存该截图到你的电脑上即可</li><li>接下来，还需要安装一款加速软件：<code>wget -N --no-check-certificate https://raw.githubusercontent.com/91yun/serverspeeder/master/serverspeeder-all.sh &amp;&amp; bash serverspeeder-all.sh</code></li><li>关闭防火墙：<code>service iptables stop</code></li><li><code>chkconfig iptables off</code></li></ul><h1 id="配置ssr客户端"><a href="#配置ssr客户端" class="headerlink" title="配置ssr客户端"></a>配置ssr客户端</h1><hr><p>右击小飞机，选择编辑服务器，根据上一步的截图，依次填写你的服务器信息即可，之后就可以畅游了😂</p><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><pre class="line-numbers language-bash"><code class="language-bash">/etc/init.d/shadowsocks start <span class="token comment" spellcheck="true"># SSR启动</span>/etc/init.d/shadowsocks stop <span class="token comment" spellcheck="true"># SSR停止</span>/etc/init.d/shadowsocks restart <span class="token comment" spellcheck="true"># SSR重启</span>/etc/init.d/shadowsocks status <span class="token comment" spellcheck="true"># SSR状态</span>/serverspeeder/bin/serverSpeeder.sh restart <span class="token comment" spellcheck="true"># 重启加速软件</span>/serverspeeder/bin/serverSpeeder.sh start <span class="token comment" spellcheck="true"># 启动加速软件</span>/serverspeeder/bin/serverSpeeder.sh stop <span class="token comment" spellcheck="true"># 停止加速软件</span>/serverspeeder/bin/serverSpeeder.sh status <span class="token comment" spellcheck="true"># 加速软件状态</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h1><hr><p>本博客参考 <a href="http://www.aloneray.com/54.html#comments" target="_blank" rel="noopener"><strong>Refrain</strong></a> 大佬的文章，如果觉得本文章不能够解决你的问题，还可以参考 <a href="https://strivebo.com/2019/02/12/%E7%AF%871%EF%BC%9A%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%96%B9%E5%BC%8F%E6%80%BB%E7%BB%93/" target="_blank" rel="noopener"><strong>Jaybo’s Blog</strong></a> 这篇文章哦，在此深表感谢。</p><hr><div align="middle">女冠子·昨夜夜半    -- 唐代：韦庄</div><blockquote><p>昨夜夜半，枕上分明梦见。语多时。依旧桃花面，频低柳叶眉。<br>半羞还半喜，欲去又依依。觉来知是梦，不胜悲。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ssm框架-流程</title>
      <link href="/2019/11/03/ssm-kuang-jia-liu-cheng/"/>
      <url>/2019/11/03/ssm-kuang-jia-liu-cheng/</url>
      
        <content type="html"><![CDATA[<h1 id="springmvc-的配置"><a href="#springmvc-的配置" class="headerlink" title="springmvc 的配置"></a>springmvc 的配置</h1><hr><p><strong>springmvc配置文件需要配置的内容：</strong></p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!--配置包扫描--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.latinos.*<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token comment" spellcheck="true">&lt;!--开启springmvc注解驱动--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>annotation-driven</span><span class="token punctuation">/></span></span><span class="token comment" spellcheck="true">&lt;!--配置视图解析器：是为了在url上不写 pages InternalResourceViewResolver--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>internalResourceViewResolver<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.springframework.web.servlet.view.InternalResourceViewResolver<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--配置前缀--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>prefix<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/pages/<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token comment" spellcheck="true">&lt;!--配置后缀--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>suffix<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--配置文件上传 CommonsMultipartResolver--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>multipartResolver<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.springframework.web.multipart.commons.CommonsMultipartResolver<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--配置默认编码--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>defaultEncoding<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token comment" spellcheck="true">&lt;!--配置所有文件的总上传大小--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>maxUploadSize<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10485760<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--配置定时器任务（可以暂时不写）--></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="4.jpg" alt></p><h1 id="spring-的配置"><a href="#spring-的配置" class="headerlink" title="spring 的配置"></a>spring 的配置</h1><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!--配置读取jdbc.properties配置文件的工具类 PropertyPlaceholderConfigurer--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>propertyPlaceholderConfigurer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.springframework.beans.factory.config.PropertyPlaceholderConfigurer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--配置 jdbc.properties 的读取位置 如果是 资源文件，路径就是用 . 隔开的，        当处于 resouces 直接根目录下的，就是 classpath，若有子包的话，就是 classpath* --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>location<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>classpath:jdbc.properties<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--配置数据源及数据库连接池 BasicDataSource--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>basicDataSource<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.apache.commons.dbcp.BasicDataSource<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>driverClassName<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${driverClassName}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${url}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${username}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${password}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--读取书写sql语句的xml文件的位置 SqlSessionFactoryBean--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sqlSessionFactoryBean<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.mybatis.spring.SqlSessionFactoryBean<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--注入数据源--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>basicDataSource<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token comment" spellcheck="true">&lt;!--指定xml文件的存放位置--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mapperLocations<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>classpath*:com/latin/mapper/*.xml<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--指定mybatis主配置文件--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>configLocation<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>classpath:mybatis.xml<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--读取dao层接口类，将dao层与对应的xml文件关联 MapperScannerConfigurer--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mapperScannerConfigurer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.mybatis.spring.mapper.MapperScannerConfigurer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--指定dao接口类的位置--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>basePackage<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.latin.mapper<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="3.jpg" alt></p><h1 id="mybatis-的配置"><a href="#mybatis-的配置" class="headerlink" title="mybatis 的配置"></a>mybatis 的配置</h1><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!--配置别名--></span><span class="token comment" spellcheck="true">&lt;!--配置PageHelper插件--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span> <span class="token attr-name">interceptor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.github.pagehelper.PageHelper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dialect<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mysql<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="2.jpg" alt></p><h1 id="web-xml-的配置"><a href="#web-xml-的配置" class="headerlink" title="web.xml 的配置"></a>web.xml 的配置</h1><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!--配置默认访问首页--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>welcome-file-list</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>welcome-file</span><span class="token punctuation">></span></span>/pages/front/index.jsp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>welcome-file</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>welcome-file-list</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--配置处理中文乱码的过滤器类--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>characterEncodingFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-class</span><span class="token punctuation">></span></span>org.springframework.web.filter.CharacterEncodingFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-class</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>init-param</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">></span></span>encoding<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">></span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>init-param</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-mapping</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>characterEncodingFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>/*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-mapping</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--配置监听器，读取applicationContext.xml文件：ContextLoaderListener--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>context-param</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">></span></span>contextConfigLocation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">></span></span>classpath:applicationContext.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>context-param</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>listener</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>listener-class</span><span class="token punctuation">></span></span>org.springframework.web.context.ContextLoaderListener<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>listener-class</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>listener</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--配置springmvc的核心类--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>dispatcherServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-class</span><span class="token punctuation">></span></span>org.springframework.web.servlet.DispatcherServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-class</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>init-param</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">></span></span>contextConfigLocation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">></span></span>classpath:springmvc.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>init-param</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>load-on-startup</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>load-on-startup</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-mapping</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>dispatcherServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>*.do<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-mapping</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--配置错误页面--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>error-page</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>error-code</span><span class="token punctuation">></span></span>404<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>error-code</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>location</span><span class="token punctuation">></span></span>/pages/error/404.jsp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>location</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>error-page</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="1.jpg" alt></p><hr><div align="middle">柳梢青·茅舍疏篱        -- 宋代：杨无咎</div>> 茅舍疏篱。半飘残雪，斜卧低枝。可更相宜，烟笼修竹，月在寒溪。> 宁宁伫立移时。判瘦损、无妨为伊。谁赋才情，画成幽思，写入新诗。 ]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二零一九年快要过去了</title>
      <link href="/2019/11/03/2019/"/>
      <url>/2019/11/03/2019/</url>
      
        <content type="html"><![CDATA[<div align="middle"><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=421091290&auto=1&height=66" muted="muted"></iframe></div>2019年不知不觉就要过去了，回首看这一年，发现真的是百事不顺啊，但好在挺过来了。<h1 id="2019"><a href="#2019" class="headerlink" title="2019"></a>2019</h1><hr><p>2019年也算是我的一个小转折吧，主要有几件事：</p><ul><li>因为工作换了城市</li><li>换工作</li><li>焦虑</li></ul><p><strong>因为工作换了城市</strong> 之前毕业后一直呆在安徽，说实话我也没觉得安徽有什么不好的，但是无奈总有一颗想流浪的心，所以在年初毅然决然离开熟悉的环境，只身一人南下<br><img src="3.jpg" alt></p><p><strong>换工作</strong> 换了城市后不可避免的需要另换工作了，真是被坑了好大一波，难受😫<br><img src="2.jpg" alt></p><p><strong>焦虑</strong> 这一年来感觉焦虑愈来愈烈，各种焦虑，真是诸事不顺呢<br><img src="1.jpg" alt></p><p>不管怎样，2019年快要过去了，祝福我们每一个人。</p><hr><div align="middle">琵琶仙·中秋    -- 清代：纳兰性德</div>> 碧海年年，试问取、冰轮为谁圆缺？吹到一片秋香，清辉了如雪。愁中看、好天良夜，知道尽成悲咽。只影而今，那堪重对，旧时明月。花径里、戏捉迷藏，曾惹下萧萧井梧叶。记否轻纨小扇，又几番凉热。只落得，填膺百感，总茫茫、不关离别。一任紫玉无情，夜寒吹裂。]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
